/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 1.0.0-oas3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@GitchrisqueenTdameritradeApi);
  }
}(this, function(expect, @GitchrisqueenTdameritradeApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CandleListCandles', function() {
      beforeEach(function() {
        instance = new @GitchrisqueenTdameritradeApi.CandleListCandles();
      });

      it('should create an instance of CandleListCandles', function() {
        // TODO: update the code to test CandleListCandles
        expect(instance).to.be.a(@GitchrisqueenTdameritradeApi.CandleListCandles);
      });

      it('should have the property Close (base name: "close")', function() {
        // TODO: update the code to test the property Close
        expect(instance).to.have.property('Close');
        // expect(instance.Close).to.be(expectedValueLiteral);
      });

      it('should have the property Datetime (base name: "datetime")', function() {
        // TODO: update the code to test the property Datetime
        expect(instance).to.have.property('Datetime');
        // expect(instance.Datetime).to.be(expectedValueLiteral);
      });

      it('should have the property High (base name: "high")', function() {
        // TODO: update the code to test the property High
        expect(instance).to.have.property('High');
        // expect(instance.High).to.be(expectedValueLiteral);
      });

      it('should have the property Low (base name: "low")', function() {
        // TODO: update the code to test the property Low
        expect(instance).to.have.property('Low');
        // expect(instance.Low).to.be(expectedValueLiteral);
      });

      it('should have the property Open (base name: "open")', function() {
        // TODO: update the code to test the property Open
        expect(instance).to.have.property('Open');
        // expect(instance.Open).to.be(expectedValueLiteral);
      });

      it('should have the property Volume (base name: "volume")', function() {
        // TODO: update the code to test the property Volume
        expect(instance).to.have.property('Volume');
        // expect(instance.Volume).to.be(expectedValueLiteral);
      });

    });
  });

}));
