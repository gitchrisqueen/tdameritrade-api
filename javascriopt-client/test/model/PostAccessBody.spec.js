/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 1.0.0-oas3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@GitchrisqueenTdameritradeApi);
  }
}(this, function(expect, @GitchrisqueenTdameritradeApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PostAccessBody', function() {
      beforeEach(function() {
        instance = new @GitchrisqueenTdameritradeApi.PostAccessBody();
      });

      it('should create an instance of PostAccessBody', function() {
        // TODO: update the code to test PostAccessBody
        expect(instance).to.be.a(@GitchrisqueenTdameritradeApi.PostAccessBody);
      });

      it('should have the property AccessType (base name: "access_type")', function() {
        // TODO: update the code to test the property AccessType
        expect(instance).to.have.property('AccessType');
        // expect(instance.AccessType).to.be(expectedValueLiteral);
      });

      it('should have the property ClientId (base name: "client_id")', function() {
        // TODO: update the code to test the property ClientId
        expect(instance).to.have.property('ClientId');
        // expect(instance.ClientId).to.be(expectedValueLiteral);
      });

      it('should have the property Code (base name: "code")', function() {
        // TODO: update the code to test the property Code
        expect(instance).to.have.property('Code');
        // expect(instance.Code).to.be(expectedValueLiteral);
      });

      it('should have the property GrantType (base name: "grant_type")', function() {
        // TODO: update the code to test the property GrantType
        expect(instance).to.have.property('GrantType');
        // expect(instance.GrantType).to.be(expectedValueLiteral);
      });

      it('should have the property RedirectUri (base name: "redirect_uri")', function() {
        // TODO: update the code to test the property RedirectUri
        expect(instance).to.have.property('RedirectUri');
        // expect(instance.RedirectUri).to.be(expectedValueLiteral);
      });

      it('should have the property RefreshToken (base name: "refresh_token")', function() {
        // TODO: update the code to test the property RefreshToken
        expect(instance).to.have.property('RefreshToken');
        // expect(instance.RefreshToken).to.be(expectedValueLiteral);
      });

    });
  });

}));
