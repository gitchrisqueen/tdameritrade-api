openapi: 3.0.0
info:
  title: TD Ameritrade API - OAuth2
  description: This is replication of the TD Ameritrade API.
  version: 0.1.4
servers:
- url: https://api.tdameritrade.com/v1
security:
- application:
  - read
  - write
paths:
  /oauth2/token:
    post:
      tags:
      - Authentication
      summary: Post Access Token
      description: The token endpoint returns an access token along with an optional
        refresh token.
      operationId: oauth2TokenPOST
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostAccessBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security: []
      x-swagger-router-controller: Authentication
  /accounts/{accountId}/orders/{orderId}:
    get:
      tags:
      - Orders
      summary: Get Order
      description: Get a specific order for a specific account.
      operationId: accountsAccountIdOrdersOrderIdGET
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: orderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Orders
    put:
      tags:
      - Orders
      summary: Replace Order
      description: Replace an existing order for an account. The existing order will
        be replaced by the new order. Once replaced, the old order will be canceled
        and a new order will be created. See our Place Order Samples Guide - https://developer.tdameritrade.com/content/place-order-samples.
      operationId: accountsAccountIdOrdersOrderIdPUT
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: orderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: An error message if the order was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Orders
    delete:
      tags:
      - Orders
      summary: Cancel Order
      description: Cancel a specific order for a spcific account
      operationId: accountsAccountIdOrdersOrderIdDELETE
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: orderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: An error message if the order was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Orders
  /accounts/{accountId}/orders:
    get:
      tags:
      - Orders
      summary: Get Orders by Path
      description: Orders for a specific account.
      operationId: accountsAccountIdOrdersGET
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: maxResults
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: fromEnteredTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: toEnteredTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - AWAITING_PARENT_ORDER
          - AWAITING_CONDITION
          - AWAITING_MANUAL_REVIEW
          - ACCEPTED
          - AWAITING_UR_OUT
          - PENDING_ACTIVATION
          - QUEUED
          - WORKING
          - REJECTED
          - PENDING_CANCEL
          - CANCELED
          - PENDING_REPLACE
          - REPLACED
          - FILLED
          - EXPIRED
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Orders
  /orders:
    get:
      tags:
      - Orders
      summary: Get Orders By Query
      description: All orders for a specific account or, if account ID isn't specified,
        orders will be returned for all linked accounts.
      operationId: ordersGET
      parameters:
      - name: accountId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxResults
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: fromEnteredTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: toEnteredTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - AWAITING_PARENT_ORDER
          - AWAITING_CONDITION
          - AWAITING_MANUAL_REVIEW
          - ACCEPTED
          - AWAITING_UR_OUT
          - PENDING_ACTIVATION
          - QUEUED
          - WORKING
          - REJECTED
          - PENDING_CANCEL
          - CANCELED
          - PENDING_REPLACE
          - REPLACED
          - FILLED
          - EXPIRED
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Orders
    post:
      tags:
      - Orders
      summary: Place Order
      description: Place an order for a specific account. See our Place Order Samples
        Guide - https://developer.tdameritrade.com/content/place-order-samples.
      operationId: ordersPOST
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/Json:
            schema:
              $ref: '#/components/schemas/OrderGet'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Orders
  /accounts/{accountId}/savedorders:
    get:
      tags:
      - Saved Orders
      summary: Get Saved Orders by Path
      description: Saved orders for a specific account.
      operationId: accountsAccountIdSavedordersGET
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: SavedOrders
    post:
      tags:
      - Saved Orders
      summary: Create Saved Orders
      description: Save an order for a specific account. See our Place Order Samples
        Guide - https://developer.tdameritrade.com/content/place-order-samples.
      operationId: accountsAccountIdSavedordersPOST
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/Json:
            schema:
              $ref: '#/components/schemas/OrderGet'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: SavedOrders
  /accounts/{accountId}/savedorders/{savedOrderId}:
    get:
      tags:
      - Saved Orders
      summary: Get Saved Orders
      description: Specific saved order by its ID, for a specific account.
      operationId: accountsAccountIdSavedordersSavedOrderIdGET
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: savedOrderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: SavedOrders
    put:
      tags:
      - Saved Orders
      summary: Replace Saved Orders
      description: Replace an existing saved order for an account. The existing saved
        order will be replaced by the new order. see our Place Order Samples Guide
        - Click here.
      operationId: accountsAccountIdSavedordersSavedOrderIdPUT
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: savedOrderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/Json:
            schema:
              $ref: '#/components/schemas/OrderGet'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGet'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: An error message if the order was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: SavedOrders
    delete:
      tags:
      - Saved Orders
      summary: Delete Saved Orders
      description: Delete a specific saved order for a specific account.
      operationId: accountsAccountIdSavedordersSavedOrderIdDELETE
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: savedOrderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: An error message if the order was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: SavedOrders
  /accounts:
    get:
      tags:
      - Accounts
      summary: Get Accounts
      description: Account balances, positions, and orders for all linked accounts.
      operationId: accountsGET
      parameters:
      - name: fields
        in: query
        description: 'Balances displayed by default, additional fields can be added
          here by adding positions or orders. Example: fields=positions,orders'
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "207":
          description: Indicates there was a problem getting account data for one
            or more linked accounts, but the accounts who's data returned successfully
            is in the response. Do not aggregate balances and positions for this case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Accounts
  /accounts/{accountId}:
    get:
      tags:
      - Accounts
      summary: Get Account
      description: Account balances, positions, and orders for a specific account.
      operationId: accountsAccountIdGET
      parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: fields
        in: query
        description: 'Balances displayed by default, additional fields can be added
          here by adding positions or orders. Example: fields=positions,orders'
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: An error message indicating the validation problem with the
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "500":
          description: An error message indicating there was an unexpected server
            error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: An error message indicating the caller is forbidden from accessing
            this page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Accounts
  /marketdata/hours:
    get:
      tags:
      - Market Hours
      summary: Get Hours for Multiple Markets
      operationId: marketdataHoursGET
      parameters:
      - name: apiKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: markets
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EQUITY
          - OPTION
          - FUTURE
          - BOND
          - FOREX
      - name: date
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hours'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: MarketHours
  /marketdata/{market}/hours:
    get:
      tags:
      - Market Hours
      summary: Get Hours for Multiple Markets
      operationId: marketdataMarketHoursGET
      parameters:
      - name: apiKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: market
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: date
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hours'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: MarketHours
  /marketdata/{index}/movers:
    get:
      tags:
      - Movers
      summary: Get price history for a symbol
      operationId: marketdataIndexMoversGET
      parameters:
      - name: index
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: apikey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: direction
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - up
          - down
      - name: change
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - value
          - percent
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mover'
        "400":
          description: An error message indicating the caller must pass a correct
            value in the parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: An error message indicating movers for the instrument was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: Movers
  /marketdata/{symbol}/pricehistory:
    get:
      tags:
      - Price History
      summary: Get price history for a symbol
      operationId: marketdataSymbolPricehistoryGET
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: apikey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: periodType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PeriodType'
      - name: period
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: frequencyType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FrequencyType'
      - name: frequency
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: endDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: startDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: needExtendedHoursData
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandleList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: PriceHistory
  /instruments:
    get:
      tags:
      - Search Instruments
      summary: Search or retrieve instrument data, including fundamental data
      operationId: instrumentsGET
      parameters:
      - name: apikey
        in: query
        description: Pass your OAuth User ID to make an unauthenticated request for
          delayed data.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: symbol
        in: query
        description: Value to pass to the search. See projection description for more
          information.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projection
        in: query
        description: 'The type of request: symbol-search: Retrieve instrument data
          of a specific symbol or cusip symbol-regex: Retrieve instrument data for
          all symbols matching regex. Example: symbol=XYZ.* will return all symbols
          beginning with XYZ desc-search: Retrieve instrument data for instruments
          whose description contains the word supplied. Example: symbol=FakeCompany
          will return all instruments with FakeCompany in the description. desc-regex:
          Search description with full regex support. Example: symbol=XYZ.[A-C] returns
          all instruments whose descriptions contain a word beginning with XYZ followed
          by a character A through C. fundamental: Returns fundamental data for a
          single instrument specified by exact symbol.'
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: An error message indicating the caller must pass a non null
            value in the parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "404":
          description: An error message indicating the instrument for the symbol/cusip
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
        "406":
          description: An error message indicating an issue in the symbol regex, or
            number of symbols searched is over the maximum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EASObject'
      security:
      - bearerAuth: []
      x-swagger-router-controller: SearchInstruments
components:
  schemas:
    Mover:
      type: object
      properties:
        change:
          type: number
          format: double
        description:
          type: string
        direction:
          type: string
          enum:
          - up
          - down
        last:
          type: number
          format: double
        symbol:
          type: string
        totalVolume:
          type: integer
          format: int64
      example:
        totalVolume: 1
        symbol: symbol
        last: 6.02745618307040320615897144307382404804229736328125
        change: 0.80082819046101150206595775671303272247314453125
        description: description
        direction: up
    Hours:
      type: object
      properties:
        category:
          type: string
        date:
          type: string
        exchange:
          type: string
        isOpen:
          type: boolean
        marketType:
          type: string
          enum:
          - BOND
          - EQUITY
          - ETF
          - FOREX
          - FUTURE
          - FUTURE_OPTION
          - INDEX
          - INDICATOR
          - MUTUAL_FUND
          - OPTION
          - UNKNOWN
        product:
          type: string
        productName:
          type: string
        sessionHours:
          $ref: '#/components/schemas/Hours_sessionHours'
      example:
        date: date
        product: product
        isOpen: true
        exchange: exchange
        sessionHours:
          additionalProperties:
          - additionalProperties
          - additionalProperties
        category: category
        marketType: BOND
        productName: productName
    Account:
      type: object
      properties:
        securitiesAccount:
          $ref: '#/components/schemas/Account_securitiesAccount'
      example:
        securitiesAccount:
          schema:
            schema: ""
    Positions:
      type: array
      items:
        $ref: '#/components/schemas/Positions_inner'
    SecuritiesAccount:
      type: object
      properties:
        schema:
          oneOf:
          - $ref: '#/components/schemas/MarginAccount'
          - $ref: '#/components/schemas/CashAccount'
      example:
        schema: ""
      discriminator:
        propertyName: type
    MarginAccount:
      type: object
      properties:
        type:
          type: string
          enum:
          - CASH
          - MARGIN
        accountId:
          type: string
        roundTrips:
          type: integer
          format: int32
        isDayTrader:
          type: boolean
          default: false
        isClosingOnlyRestricted:
          type: boolean
          default: false
        positions:
          $ref: '#/components/schemas/MarginAccount_positions'
        orderStrategies:
          $ref: '#/components/schemas/MarginAccount_orderStrategies'
        initialBalances:
          $ref: '#/components/schemas/MarginAccount_initialBalances'
        currentBalances:
          $ref: '#/components/schemas/MarginAccount_currentBalances'
        projectedBalances:
          $ref: '#/components/schemas/MarginAccount_currentBalances'
    MarginAccountBalances:
      type: object
      properties:
        accruedInterest:
          type: number
          format: double
        cashBalance:
          type: number
          format: double
        cashReceipts:
          type: number
          format: double
        longOptionMarketValue:
          type: number
          format: double
        liquidationValue:
          type: number
          format: double
        longMarketValue:
          type: number
          format: double
        moneyMarketFund:
          type: number
          format: double
        savings:
          type: number
          format: double
        shortMarketValue:
          type: number
          format: double
        pendingDeposits:
          type: number
          format: double
        availableFunds:
          type: number
          format: double
        availableFundsNonMarginableTrade:
          type: number
          format: double
        buyingPower:
          type: number
          format: double
        buyingPowerNonMarginableTrade:
          type: number
          format: double
        dayTradingBuyingPower:
          type: number
          format: double
        dayTradingBuyingPowerCall:
          type: number
          format: double
        equity:
          type: number
          format: double
        equityPercentage:
          type: number
          format: double
        longMarginValue:
          type: number
          format: double
        maintenanceCall:
          type: number
          format: double
        maintenanceRequirement:
          type: number
          format: double
        marginBalance:
          type: number
          format: double
        regTCall:
          type: number
          format: double
        shortBalance:
          type: number
          format: double
        shortMarginValue:
          type: number
          format: double
        shortOptionMarketValue:
          type: number
          format: double
        sma:
          type: number
          format: double
        mutualFundValue:
          type: number
          format: double
        bondValue:
          type: number
          format: double
        isInCall:
          type: boolean
          default: false
        stockBuyingPower:
          type: number
          format: double
        optionBuyingPower:
          type: number
          format: double
    CashAccount:
      type: object
      properties:
        type:
          type: string
          enum:
          - CASH
          - MARGIN
        accountId:
          type: string
        roundTrips:
          type: integer
          format: int32
        isDayTrader:
          type: boolean
          default: false
        isClosingOnlyRestricted:
          type: boolean
          default: false
        positions:
          $ref: '#/components/schemas/MarginAccount_positions'
        orderStrategies:
          $ref: '#/components/schemas/MarginAccount_orderStrategies'
        initialBalances:
          $ref: '#/components/schemas/CashAccount_initialBalances'
        currentBalances:
          $ref: '#/components/schemas/CashAccount_currentBalances'
        projectedBalances:
          $ref: '#/components/schemas/CashAccount_currentBalances'
    CashAccountBalances:
      type: object
      properties:
        accruedInterest:
          type: number
          format: double
        cashBalance:
          type: number
          format: double
        cashReceipts:
          type: number
          format: double
        longOptionMarketValue:
          type: number
          format: double
        liquidationValue:
          type: number
          format: double
        longMarketValue:
          type: number
          format: double
        moneyMarketFund:
          type: number
          format: double
        savings:
          type: number
          format: double
        shortMarketValue:
          type: number
          format: double
        pendingDeposits:
          type: number
          format: double
        cashAvailableForTrading:
          type: number
          format: double
        cashAvailableForWithdrawal:
          type: number
          format: double
        cashCall:
          type: number
          format: double
        longNonMarginableMarketValue:
          type: number
          format: double
        totalCash:
          type: number
          format: double
        shortOptionMarketValue:
          type: number
          format: double
        mutualFundValue:
          type: number
          format: double
        bondValue:
          type: number
          format: double
        cashDebitCallValue:
          type: number
          format: double
        unsettledCash:
          type: number
          format: double
    Session:
      type: string
      enum:
      - NORMAL
      - AM
      - PM
      - SEAMLESS
    Duration:
      type: string
      enum:
      - DAY
      - GOOD_TIL_CANCEL
      - FILL_OR_KILL
    OrderType:
      type: string
      enum:
      - MARKET
      - LIMIT
      - STOP
      - STOP_LIMIT
      - TRAILING_STOP
      - MARKET_ON_CLOSE
      - EXERCISE
      - TRAILING_STOP_LIMIT
      - NET_DEBIT
      - NET_CREDIT
      - NET_ZERO
    OrderGet:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/OrderGet_session'
        duration:
          $ref: '#/components/schemas/OrderGet_duration'
        orderType:
          $ref: '#/components/schemas/OrderGet_orderType'
        cancelTime:
          $ref: '#/components/schemas/OrderGet_cancelTime'
        complexOrderStrategyType:
          type: string
          enum:
          - NONE
          - COVERED
          - VERTICAL
          - BACK_RATIO
          - CALENDAR
          - DIAGONAL
          - STRADDLE
          - STRANGLE
          - COLLAR_SYNTHETIC
          - BUTTERFLY
          - CONDOR
          - IRON_CONDOR
          - VERTICAL_ROLL
          - COLLAR_WITH_STOCK
          - DOUBLE_DIAGONAL
          - UNBALANCED_BUTTERFLY
          - UNBALANCED_CONDOR
          - UNBALANCED_IRON_CONDOR
          - UNBALANCED_VERTICAL_ROLL
          - CUSTOM
        quality:
          type: number
          format: double
        filledQuantity:
          type: number
          format: double
        remainingQuantity:
          type: number
          format: double
        requestedDestination:
          type: string
          enum:
          - INET
          - ECN_ARCA
          - CBOE
          - AMEX
          - PHLX
          - ISE
          - BOX
          - NYSE
          - NASDAQ
          - BATS
          - C2
          - AUTO
        destinationLinkName:
          type: string
        releaseTime:
          type: string
          format: date-time
        stopPrice:
          type: number
          format: double
        stopPriceLinkBasis:
          type: string
          enum:
          - MANUAL
          - BASE
          - TRIGGER
          - LAST
          - BID
          - ASK
          - ASK_BID
          - MARK
          - AVERAGE
        stopPriceLinkType:
          type: string
          enum:
          - VALUE
          - PERCENT
          - TICK
        stopPriceOffset:
          type: number
          format: double
        stopType:
          type: string
          enum:
          - STANDARD
          - BID
          - ASK
          - LAST
          - MARK
        priceLinkBasis:
          type: string
          enum:
          - MANUAL
          - BASE
          - TRIGGER
          - LAST
          - BID
          - ASK
          - ASK_BID
          - MARK
          - AVERAGE
        priceLinkType:
          type: string
          enum:
          - VALUE
          - PERCENT
          - TICK
        price:
          type: number
          format: double
        taxLotMethod:
          type: string
          enum:
          - FIFO
          - LIFO
          - HIGH_COST
          - LOW_COST
          - AVERAGE_COST
          - SPECIFIC_LOT
        orderLegCollection:
          type: array
          xml:
            name: orderLeg
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderGet_orderLegCollection'
        activationPrice:
          type: number
          format: double
        specialInstruction:
          type: string
          enum:
          - ALL_OR_NONE
          - DO_NOT_REDUCE
          - ALL_OR_NONE_DO_NOT_REDUCE
        orderStrategyType:
          type: string
          enum:
          - SINGLE
          - OCO
          - TRIGGER
        orderId:
          type: integer
          format: int64
        cancelable:
          type: boolean
          default: false
        editable:
          type: boolean
          default: false
        status:
          type: string
          enum:
          - AWAITING_PARENT_ORDER
          - AWAITING_CONDITION
          - AWAITING_MANUAL_REVIEW
          - ACCEPTED
          - AWAITING_UR_OUT
          - PENDING_ACTIVATION
          - QUEUED
          - WORKING
          - REJECTED
          - PENDING_CANCEL
          - CANCELED
          - PENDING_REPLACE
          - REPLACED
          - FILLED
          - EXPIRED
        enteredTime:
          type: string
          format: date-time
        closedTime:
          type: string
          format: date-time
        tag:
          type: string
        accountId:
          type: integer
          format: int64
        orderActivityCollection:
          type: array
          xml:
            name: orderActivity
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderGet_orderActivityCollection'
        replacingOrderCollection:
          type: array
          xml:
            name: replacingOrder
            wrapped: true
          items:
            type: object
        childOrderStrategies:
          type: array
          xml:
            name: childOrder
            wrapped: true
          items:
            type: object
        statusDescription:
          type: string
      example:
        remainingQuantity: 1.46581298050294517310021547018550336360931396484375
        orderType:
          schema: MARKET
        orderStrategyType: SINGLE
        releaseTime: 2000-01-23T04:56:07.000+00:00
        cancelable: false
        orderId: 2
        session:
          schema: NORMAL
        stopPriceOffset: 5.63737665663332876420099637471139430999755859375
        stopPriceLinkType: VALUE
        orderActivityCollection:
        - activityType:
            schema:
              schema:
                quantity: 7.3862819483858839220147274318151175975799560546875
                executionType: FILL
                orderRamainingQuantity: 1.231513536777255612975068288506008684635162353515625
                activityType: EXECUTION
                executionLegs:
                - quantity: 1.489415909854170383397331534069962799549102783203125
                  price: 7.4577447736837658709418974467553198337554931640625
                  legId: 1
                  mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
                  time: 2000-01-23T04:56:07.000+00:00
                - quantity: 1.489415909854170383397331534069962799549102783203125
                  price: 7.4577447736837658709418974467553198337554931640625
                  legId: 1
                  mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
                  time: 2000-01-23T04:56:07.000+00:00
        - activityType:
            schema:
              schema:
                quantity: 7.3862819483858839220147274318151175975799560546875
                executionType: FILL
                orderRamainingQuantity: 1.231513536777255612975068288506008684635162353515625
                activityType: EXECUTION
                executionLegs:
                - quantity: 1.489415909854170383397331534069962799549102783203125
                  price: 7.4577447736837658709418974467553198337554931640625
                  legId: 1
                  mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
                  time: 2000-01-23T04:56:07.000+00:00
                - quantity: 1.489415909854170383397331534069962799549102783203125
                  price: 7.4577447736837658709418974467553198337554931640625
                  legId: 1
                  mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
                  time: 2000-01-23T04:56:07.000+00:00
        filledQuantity: 6.02745618307040320615897144307382404804229736328125
        enteredTime: 2000-01-23T04:56:07.000+00:00
        closedTime: 2000-01-23T04:56:07.000+00:00
        duration:
          schema: DAY
        stopPriceLinkBasis: MANUAL
        destinationLinkName: destinationLinkName
        price: 2.3021358869347654518833223846741020679473876953125
        priceLinkType: VALUE
        tag: tag
        childOrderStrategies:
        - {}
        - {}
        orderLegCollection:
        - orderLegType: EQUITY
          quantityType: ALL_SHARES
          quantity: 9.301444243932575517419536481611430644989013671875
          instruction: BUY
          legId: 7
          instrument:
            schema:
              schema: ""
          positionEffect: OPENING
        - orderLegType: EQUITY
          quantityType: ALL_SHARES
          quantity: 9.301444243932575517419536481611430644989013671875
          instruction: BUY
          legId: 7
          instrument:
            schema:
              schema: ""
          positionEffect: OPENING
        taxLotMethod: FIFO
        specialInstruction: ALL_OR_NONE
        editable: false
        stopType: STANDARD
        quality: 0.80082819046101150206595775671303272247314453125
        accountId: 4
        stopPrice: 5.962133916683182377482808078639209270477294921875
        statusDescription: statusDescription
        priceLinkBasis: MANUAL
        requestedDestination: INET
        cancelTime:
          date: date
          shortFormat: false
        activationPrice: 3.61607674925191080461672754609026014804840087890625
        replacingOrderCollection:
        - {}
        - {}
        complexOrderStrategyType: NONE
        status: AWAITING_PARENT_ORDER
    AssetType:
      type: string
      enum:
      - EQUITY
      - OPTION
      - INDEX
      - MUTUAL_FUND
      - CASH_EQUIVALENT
      - FIXED_INCOME
      - CURRENCY
    Instrument:
      type: object
      properties:
        schema:
          oneOf:
          - $ref: '#/components/schemas/Equity'
          - $ref: '#/components/schemas/FixedIncome'
          - $ref: '#/components/schemas/MutualFund'
          - $ref: '#/components/schemas/CashEquivalent'
          - $ref: '#/components/schemas/Option'
      example:
        schema: ""
      discriminator:
        propertyName: assetType
    OrderActivity:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Execution'
      example:
        schema:
          quantity: 7.3862819483858839220147274318151175975799560546875
          executionType: FILL
          orderRamainingQuantity: 1.231513536777255612975068288506008684635162353515625
          activityType: EXECUTION
          executionLegs:
          - quantity: 1.489415909854170383397331534069962799549102783203125
            price: 7.4577447736837658709418974467553198337554931640625
            legId: 1
            mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
            time: 2000-01-23T04:56:07.000+00:00
          - quantity: 1.489415909854170383397331534069962799549102783203125
            price: 7.4577447736837658709418974467553198337554931640625
            legId: 1
            mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
            time: 2000-01-23T04:56:07.000+00:00
    Equity:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/Equity_assetType'
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
    FixedIncome:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/Equity_assetType'
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        maturityDate:
          type: string
          format: date-time
        variableRate:
          type: number
          format: double
        factor:
          type: number
          format: double
    MutualFund:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/Equity_assetType'
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - NOT_APPLICABLE
          - OPEN_END_NON_TAXABLE
          - OPEN_END_TAXABLE
          - NO_LOAD_NON_TAXABLE
          - NO_LOAD_TAXABLE
    Option:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/Equity_assetType'
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - VANILLA
          - BINARY
          - BARRIER
        putCall:
          type: string
          enum:
          - PUT
          - CALL
        underlyingSymbol:
          type: string
        optionMultiplier:
          type: integer
          format: int32
        optionDeliverables:
          type: array
          xml:
            name: optionDeliverable
            wrapped: true
          items:
            $ref: '#/components/schemas/Option_optionDeliverables'
    CashEquivalent:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/Equity_assetType'
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - SAVINGS
          - MONEY_MARKET_FUND
    Execution:
      type: object
      properties:
        activityType:
          type: string
          enum:
          - EXECUTION
          - ORDER_ACTION
        executionType:
          type: string
          enum:
          - FILL
        quantity:
          type: number
          format: double
        orderRamainingQuantity:
          type: number
          format: doudlbe
        executionLegs:
          type: array
          xml:
            name: executionLeg
            wrapped: true
          items:
            $ref: '#/components/schemas/Execution_executionLegs'
      example:
        quantity: 7.3862819483858839220147274318151175975799560546875
        executionType: FILL
        orderRamainingQuantity: 1.231513536777255612975068288506008684635162353515625
        activityType: EXECUTION
        executionLegs:
        - quantity: 1.489415909854170383397331534069962799549102783203125
          price: 7.4577447736837658709418974467553198337554931640625
          legId: 1
          mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
          time: 2000-01-23T04:56:07.000+00:00
        - quantity: 1.489415909854170383397331534069962799549102783203125
          price: 7.4577447736837658709418974467553198337554931640625
          legId: 1
          mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
          time: 2000-01-23T04:56:07.000+00:00
    FrequencyType:
      type: string
      enum:
      - minute
      - daily
      - weekly
      - monthly
    PeriodType:
      type: string
      enum:
      - day
      - month
      - year
      - ytd
    PostAccessBody:
      required:
      - client_id
      - grant_type
      type: object
      properties:
        grant_type:
          type: string
          description: The grant type of the oAuth scheme. Possible values are authorization_code,
            refresh_token
        refresh_token:
          type: string
          description: Required if using refresh token grant
        access_type:
          type: string
          description: Set to offline to receive a refresh token on an authorization_code
            grant type request. Do not set to offline on a refresh_token grant type
            request.
        code:
          type: string
          description: Required if trying to use authorization code grant
        client_id:
          type: integer
          description: OAuth User ID of your application
        redirect_uri:
          type: string
          description: Required if trying to use authorization code grant
      description: Body Parmeers for the Post Access Token Endpoint
    CandleList:
      type: object
      properties:
        candles:
          type: array
          items:
            $ref: '#/components/schemas/CandleList_candles'
        empty:
          type: boolean
        symbol:
          type: string
          description: Symbol
      description: List of Candles
      example:
        symbol: symbol
        candles:
        - volume: 2.3021358869347654518833223846741020679473876953125
          datetime: 6
          high: 1.46581298050294517310021547018550336360931396484375
          low: 5.962133916683182377482808078639209270477294921875
          close: 0.80082819046101150206595775671303272247314453125
          open: 5.63737665663332876420099637471139430999755859375
        - volume: 2.3021358869347654518833223846741020679473876953125
          datetime: 6
          high: 1.46581298050294517310021547018550336360931396484375
          low: 5.962133916683182377482808078639209270477294921875
          close: 0.80082819046101150206595775671303272247314453125
          open: 5.63737665663332876420099637471139430999755859375
        empty: true
    EASObject:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
          format: int32
        scope:
          type: string
        refresh_token_expires_in:
          type: integer
          format: int32
      example:
        access_token: access_token
        refresh_token_expires_in: 6
        refresh_token: refresh_token
        scope: scope
        token_type: token_type
        expires_in: 0
    Bond:
      type: object
      properties:
        bondPrice:
          type: number
          format: double
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        exchange:
          type: string
        assetType:
          type: string
          enum:
          - BOND
    FundamentalData:
      type: object
      properties:
        symbol:
          type: string
        high52:
          type: number
          format: double
        low52:
          type: number
          format: double
        dividendAmount:
          type: number
          format: double
        dividendYield:
          type: number
          format: double
        dividendDate:
          type: string
        peRatio:
          type: number
          format: double
        pegRatio:
          type: number
          format: double
        pbRatio:
          type: number
          format: double
        prRatio:
          type: number
          format: double
        pcfRatio:
          type: number
          format: double
        grossMarginTTM:
          type: number
          format: double
        grossMarginMRQ:
          type: number
          format: double
        netProfitMarginTTM:
          type: number
          format: double
        netProfitMarginMRQ:
          type: number
          format: double
        operatingMarginTTM:
          type: number
          format: double
        operatingMarginMRQ:
          type: number
          format: double
        returnOnEquity:
          type: number
          format: double
        returnOnAssets:
          type: number
          format: double
        returnOnInvestment:
          type: number
          format: double
        quickRatio:
          type: number
          format: double
        currentRatio:
          type: number
          format: double
        interestCoverage:
          type: number
          format: double
        totalDebtToCapital:
          type: number
          format: double
        ltDebtToEquity:
          type: number
          format: double
        totalDebtToEquity:
          type: number
          format: double
        epsTTM:
          type: number
          format: double
        epsChangePercentTTM:
          type: number
          format: double
        epsChangeYear:
          type: number
          format: double
        epsChange:
          type: number
          format: double
        revChangeYear:
          type: number
          format: double
        revChangeTTM:
          type: number
          format: double
        revChangeIn:
          type: number
          format: double
        sharesOutstanding:
          type: number
          format: double
        marketCapFloat:
          type: number
          format: double
        marketCap:
          type: number
          format: double
        bookValuePerShare:
          type: number
          format: double
        shortIntToFloat:
          type: number
          format: double
        shortIntDayToCover:
          type: number
          format: double
        divGrowthRate3Year:
          type: number
          format: double
        dividendPayAmount:
          type: number
          format: double
        dividendPayDate:
          type: string
        beta:
          type: number
          format: double
        vol1DayAvg:
          type: number
          format: double
        vol10DayAvg:
          type: number
          format: double
        vol3MonthAvg:
          type: number
          format: double
    Fundamental:
      type: object
      properties:
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        exchange:
          type: string
        assetType:
          type: string
          enum:
          - EQUITY
          - ETF
          - MUTUAL_FUND
          - UNKNOWN
        fundamental:
          $ref: '#/components/schemas/Fundamental_fundamental'
    SearchInstrument:
      type: object
      properties:
        cusip:
          type: string
        symbol:
          type: string
        description:
          type: string
        exchange:
          type: string
        assetType:
          type: string
          enum:
          - EQUITY
          - ETF
          - FOREX
          - FUTURE
          - FUTURE_OPTION
          - INDEX
          - INDICATOR
          - MUTUAL_FUND
          - OPTION
          - UNKNOWN
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/SearchInstrument'
      - $ref: '#/components/schemas/Bond'
      - $ref: '#/components/schemas/FundamentalData'
      - $ref: '#/components/schemas/Fundamental'
    Hours_sessionHours:
      type: object
      properties:
        additionalProperties:
          type: array
          items:
            type: string
      example:
        additionalProperties:
        - additionalProperties
        - additionalProperties
    Account_securitiesAccount:
      properties:
        schema:
          $ref: '#/components/schemas/SecuritiesAccount'
      example:
        schema:
          schema: ""
    Positions_inner:
      type: object
      properties:
        shortQuantity:
          type: number
          format: double
        averagePrice:
          type: number
          format: double
        currentDayProfitLoss:
          type: number
          format: double
        currentDayProfitLossPercentage:
          type: number
          format: double
        longQuantity:
          type: number
          format: double
        settledLongQuantity:
          type: number
          format: double
        settledShortQuantity:
          type: number
          format: double
        agedQuantity:
          type: number
          format: double
        instrument:
          properties:
            schema:
              $ref: '#/components/schemas/Instrument'
    MarginAccount_positions:
      properties:
        schema:
          $ref: '#/components/schemas/Positions'
    MarginAccount_orderStrategies:
      properties:
        schema:
          $ref: '#/components/schemas/OrderGet'
    MarginAccount_initialBalances:
      type: object
      properties:
        accruedInterest:
          type: number
          format: double
        availableFundsNonMarginableTrade:
          type: number
          format: double
        bondValue:
          type: number
          format: double
        buyingPower:
          type: number
          format: double
        cashBalance:
          type: number
          format: double
        cashAvailableForTrading:
          type: number
          format: double
        cashReceipts:
          type: number
          format: double
        dayTradingBuyingPower:
          type: number
          format: double
        dayTradingBuyingPowerCall:
          type: number
          format: double
        dayTradingEquityCall:
          type: number
          format: double
        equity:
          type: number
          format: double
        equityPercentage:
          type: number
          format: double
        liquidationValue:
          type: number
          format: double
        longMarginValue:
          type: number
          format: double
        longOptionMarketValue:
          type: number
          format: double
        longStockValue:
          type: number
          format: double
        maintenanceCall:
          type: number
          format: double
        maintenanceRequirement:
          type: number
          format: double
        margin:
          type: number
          format: double
        marginEquity:
          type: number
          format: double
        moneyMarketFund:
          type: number
          format: double
        mutualFundValue:
          type: number
          format: double
        regTCall:
          type: number
          format: double
        shortMarginValue:
          type: number
          format: double
        shortOptionMarketValue:
          type: number
          format: double
        shortStockValue:
          type: number
          format: double
        totalCash:
          type: number
          format: double
        isInCall:
          type: boolean
          default: false
        unsettledCash:
          type: number
          format: double
        pendingDeposits:
          type: number
          format: double
        marginBalance:
          type: number
          format: double
        shortBalance:
          type: number
          format: double
        accountValue:
          type: number
          format: double
    MarginAccount_currentBalances:
      properties:
        schema:
          $ref: '#/components/schemas/MarginAccountBalances'
    CashAccount_initialBalances:
      type: object
      properties:
        accruedInterest:
          type: number
          format: double
        cashAvailableForTrading:
          type: number
          format: double
        cashAvailableForWithdrawal:
          type: number
          format: double
        cashBalance:
          type: number
          format: double
        bondValue:
          type: number
          format: double
        cashReceipts:
          type: number
          format: double
        liquidationValue:
          type: number
          format: double
        longOptionMarketValue:
          type: number
          format: double
        longStockValue:
          type: number
          format: double
        moneyMarketFund:
          type: number
          format: double
        mutualFundValue:
          type: number
          format: double
        shortOptionMarketValue:
          type: number
          format: double
        shortStockValue:
          type: number
          format: double
        isInCall:
          type: boolean
          default: false
        unsettledCash:
          type: number
          format: double
        cashDebitCallValue:
          type: number
          format: double
        pendingDeposits:
          type: number
          format: double
        accountValue:
          type: number
          format: double
    CashAccount_currentBalances:
      properties:
        schema:
          $ref: '#/components/schemas/CashAccountBalances'
    OrderGet_session:
      properties:
        schema:
          $ref: '#/components/schemas/Session'
      example:
        schema: NORMAL
    OrderGet_duration:
      properties:
        schema:
          $ref: '#/components/schemas/Duration'
      example:
        schema: DAY
    OrderGet_orderType:
      properties:
        schema:
          $ref: '#/components/schemas/OrderType'
      example:
        schema: MARKET
    OrderGet_cancelTime:
      type: object
      properties:
        date:
          type: string
        shortFormat:
          type: boolean
          default: false
      example:
        date: date
        shortFormat: false
    OrderGet_instrument:
      properties:
        schema:
          $ref: '#/components/schemas/Instrument'
      example:
        schema:
          schema: ""
    OrderGet_orderLegCollection:
      type: object
      properties:
        orderLegType:
          type: string
          enum:
          - EQUITY
          - OPTION
          - INDEX
          - MUTUAL_FUND
          - CASH_EQUIVALENT
          - FIXED_INCOME
          - CURRENCY
        legId:
          type: integer
          format: int64
        instrument:
          $ref: '#/components/schemas/OrderGet_instrument'
        instruction:
          type: string
          enum:
          - BUY
          - SELL
          - BUY_TO_COVER
          - SELL_SHORT
          - BUY_TO_OPEN
          - BUY_TO_CLOSE
          - SELL_TO_OPEN
          - SELL_TO_CLOSE
          - EXCHANGE
        positionEffect:
          type: string
          enum:
          - OPENING
          - CLOSING
          - AUTOMATIC
        quantity:
          type: number
          format: double
        quantityType:
          type: string
          enum:
          - ALL_SHARES
          - DOLLARS
          - SHARES
      example:
        orderLegType: EQUITY
        quantityType: ALL_SHARES
        quantity: 9.301444243932575517419536481611430644989013671875
        instruction: BUY
        legId: 7
        instrument:
          schema:
            schema: ""
        positionEffect: OPENING
    OrderGet_activityType:
      properties:
        schema:
          $ref: '#/components/schemas/OrderActivity'
      example:
        schema:
          schema:
            quantity: 7.3862819483858839220147274318151175975799560546875
            executionType: FILL
            orderRamainingQuantity: 1.231513536777255612975068288506008684635162353515625
            activityType: EXECUTION
            executionLegs:
            - quantity: 1.489415909854170383397331534069962799549102783203125
              price: 7.4577447736837658709418974467553198337554931640625
              legId: 1
              mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
              time: 2000-01-23T04:56:07.000+00:00
            - quantity: 1.489415909854170383397331534069962799549102783203125
              price: 7.4577447736837658709418974467553198337554931640625
              legId: 1
              mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
              time: 2000-01-23T04:56:07.000+00:00
    OrderGet_orderActivityCollection:
      type: object
      properties:
        activityType:
          $ref: '#/components/schemas/OrderGet_activityType'
      example:
        activityType:
          schema:
            schema:
              quantity: 7.3862819483858839220147274318151175975799560546875
              executionType: FILL
              orderRamainingQuantity: 1.231513536777255612975068288506008684635162353515625
              activityType: EXECUTION
              executionLegs:
              - quantity: 1.489415909854170383397331534069962799549102783203125
                price: 7.4577447736837658709418974467553198337554931640625
                legId: 1
                mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
                time: 2000-01-23T04:56:07.000+00:00
              - quantity: 1.489415909854170383397331534069962799549102783203125
                price: 7.4577447736837658709418974467553198337554931640625
                legId: 1
                mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
                time: 2000-01-23T04:56:07.000+00:00
    Equity_assetType:
      properties:
        schema:
          $ref: '#/components/schemas/AssetType'
    Option_optionDeliverables:
      type: object
      properties:
        symbol:
          type: string
        deliverableUnits:
          type: number
          format: double
        currencyType:
          type: string
          enum:
          - USD
          - CAD
          - EUR
          - JPY
        assetType:
          $ref: '#/components/schemas/Equity_assetType'
    Execution_executionLegs:
      type: object
      properties:
        legId:
          type: integer
          format: int32
        quantity:
          type: number
          format: double
        mismarkedQuantity:
          type: number
          format: double
        price:
          type: number
          format: double
        time:
          type: string
          format: date-time
      example:
        quantity: 1.489415909854170383397331534069962799549102783203125
        price: 7.4577447736837658709418974467553198337554931640625
        legId: 1
        mismarkedQuantity: 6.8468526983526398765889098285697400569915771484375
        time: 2000-01-23T04:56:07.000+00:00
    CandleList_candles:
      type: object
      properties:
        close:
          type: number
          description: Close
          format: double
        datetime:
          type: integer
          description: DateTime
          format: int64
        high:
          type: number
          description: High
          format: double
        low:
          type: number
          description: Low
          format: double
        open:
          type: number
          description: Open
          format: double
        volume:
          type: number
          description: Volume
          format: double
      example:
        volume: 2.3021358869347654518833223846741020679473876953125
        datetime: 6
        high: 1.46581298050294517310021547018550336360931396484375
        low: 5.962133916683182377482808078639209270477294921875
        close: 0.80082819046101150206595775671303272247314453125
        open: 5.63737665663332876420099637471139430999755859375
    Fundamental_fundamental:
      properties:
        schema:
          $ref: '#/components/schemas/FundamentalData'
  examples:
    bondObject:
      value:
        bondPrice: 11
        cusip: christopherqueen
        symbol: cdq
        descriptions: Chris Queen Madeup Bond
        exchange: CDQ
        assetType: BOND
    instrumentObject:
      value:
        cusip: 66987E206
        symbol: NG
        description: Novagold Resources Inc.
        exchange: AMEX
        assetType: EQUITY
    fundamentalDataObject:
      value:
        symbol: NG
        high52: 12.845
        low52: 4.65
        dividendAmount: 0
        dividendYield: 0
        peRatio: 0
        pegRatio: 0
        pbRatio: 21.99646
        prRatio: 0
        pcfRatio: 0
        grossMarginTTM: 0
        grossMarginMRQ: 0
        netProfitMarginTTM: 0
        netProfitMarginMRQ: 0
        operatingMarginTTM: 0
        operatingMarginMRQ: 0
        returnOnEquity: 0
        returnOnAssets: 0
        returnOnInvestment: 0
        quickRatio: 0
        currentRatio: 79.54602
        interestCoverage: 0,
        totalDebtToCapital: 44.61743
        ltDebtToEquity: 80.56223
        totalDebtToEquity: 80.56223
        epsTTM: 0
        epsChangePercentTTM: 7.09258
        epsChangeYear: 0
        epsChange: 0
        revChangeYear: 0
        revChangeTTM: 0
        revChangeIn: 0
        sharesOutstanding: 328671632
        marketCapFloat: 239.4534
        marketCap: 2855.913
        bookValuePerShare: 0
        shortIntToFloat: 0
        shortIntDayToCover: 0
        divGrowthRate3Year: 0
        dividendPayAmount: 0
        dividendPayDate: 0
        beta: 0.51493
        vol1DayAvg: 3357300
        vol10DayAvg: 3357303
        vol3MonthAvg: 77925210
    fundamentalObject:
      value:
        NG:
          fundamental:
            symbol: NG
            high52: 12.845
            low52: 4.65
            dividendAmount: 0
            dividendYield: 0
            peRatio: 0
            pegRatio: 0
            pbRatio: 21.99646
            prRatio: 0
            pcfRatio: 0
            grossMarginTTM: 0
            grossMarginMRQ: 0
            netProfitMarginTTM: 0
            netProfitMarginMRQ: 0
            operatingMarginTTM: 0
            operatingMarginMRQ: 0
            returnOnEquity: 0
            returnOnAssets: 0
            returnOnInvestment: 0
            quickRatio: 0
            currentRatio: 79.54602
            interestCoverage: 0,
            totalDebtToCapital: 44.61743
            ltDebtToEquity: 80.56223
            totalDebtToEquity: 80.56223
            epsTTM: 0
            epsChangePercentTTM: 7.09258
            epsChangeYear: 0
            epsChange: 0
            revChangeYear: 0
            revChangeTTM: 0
            revChangeIn: 0
            sharesOutstanding: 328671632
            marketCapFloat: 239.4534
            marketCap: 2855.913
            bookValuePerShare: 0
            shortIntToFloat: 0
            shortIntDayToCover: 0
            divGrowthRate3Year: 0
            dividendPayAmount: 0
            dividendPayDate: 0
            beta: 0.51493
            vol1DayAvg: 3357300
            vol10DayAvg: 3357303
            vol3MonthAvg: 77925210'
          cusip: 66987E206
          symbol: NG
          description: Novagold Resources Inc.
          exchange: AMEX
          assetType: EQUITY
  securitySchemes:
    application:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.tdameritrade.com/auth?response_type=code&redirect_uri=http%3A%2F%2Flocalhost&client_id=YHJUQFCHRMJ7XODGVGGPINB05SCG2H45%40AMER.OAUTHAP
          tokenUrl: /oauth2/token
          scopes: {}
    bearerAuth:
      type: http
      scheme: bearer
