/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GitChrisQueen_TDA_JS) {
      root.GitChrisQueen_TDA_JS = {};
    }
    root.GitChrisQueen_TDA_JS.Bond = factory(root.GitChrisQueen_TDA_JS.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Bond model module.
   * @module model/Bond
   * @version 0.1.3
   */

  /**
   * Constructs a new <code>Bond</code>.
   * @alias module:model/Bond
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Bond</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Bond} obj Optional instance to populate.
   * @return {module:model/Bond} The populated <code>Bond</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('assetType'))
        obj.AssetType = ApiClient.convertToType(data['assetType'], 'String');
      if (data.hasOwnProperty('bondPrice'))
        obj.BondPrice = ApiClient.convertToType(data['bondPrice'], 'Number');
      if (data.hasOwnProperty('cusip'))
        obj.Cusip = ApiClient.convertToType(data['cusip'], 'String');
      if (data.hasOwnProperty('description'))
        obj.Description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('exchange'))
        obj.Exchange = ApiClient.convertToType(data['exchange'], 'String');
      if (data.hasOwnProperty('symbol'))
        obj.Symbol = ApiClient.convertToType(data['symbol'], 'String');
    }
    return obj;
  }

  /**
   * @member {module:model/Bond.AssetTypeEnum} AssetType
   */
  exports.prototype.AssetType = undefined;

  /**
   * @member {Number} BondPrice
   */
  exports.prototype.BondPrice = undefined;

  /**
   * @member {String} Cusip
   */
  exports.prototype.Cusip = undefined;

  /**
   * @member {String} Description
   */
  exports.prototype.Description = undefined;

  /**
   * @member {String} Exchange
   */
  exports.prototype.Exchange = undefined;

  /**
   * @member {String} Symbol
   */
  exports.prototype.Symbol = undefined;


  /**
   * Allowed values for the <code>AssetType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AssetTypeEnum = {
    /**
     * value: "BOND"
     * @const
     */
    BOND: "BOND"
  };

  return exports;

}));
