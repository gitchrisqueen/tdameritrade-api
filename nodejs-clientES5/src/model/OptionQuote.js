/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GitChrisQueen_TDA_JS) {
      root.GitChrisQueen_TDA_JS = {};
    }
    root.GitChrisQueen_TDA_JS.OptionQuote = factory(root.GitChrisQueen_TDA_JS.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The OptionQuote model module.
   * @module model/OptionQuote
   * @version 0.1.4
   */

  /**
   * Constructs a new <code>OptionQuote</code>.
   * @alias module:model/OptionQuote
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>OptionQuote</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OptionQuote} obj Optional instance to populate.
   * @return {module:model/OptionQuote} The populated <code>OptionQuote</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('askPrice'))
        obj.askPrice = ApiClient.convertToType(data['askPrice'], 'Number');
      if (data.hasOwnProperty('askSize'))
        obj.askSize = ApiClient.convertToType(data['askSize'], 'Number');
      if (data.hasOwnProperty('bidPrice'))
        obj.bidPrice = ApiClient.convertToType(data['bidPrice'], 'Number');
      if (data.hasOwnProperty('bidSize'))
        obj.bidSize = ApiClient.convertToType(data['bidSize'], 'Number');
      if (data.hasOwnProperty('closePrice'))
        obj.closePrice = ApiClient.convertToType(data['closePrice'], 'Number');
      if (data.hasOwnProperty('contractType'))
        obj.contractType = ApiClient.convertToType(data['contractType'], 'String');
      if (data.hasOwnProperty('deliverables'))
        obj.deliverables = ApiClient.convertToType(data['deliverables'], 'String');
      if (data.hasOwnProperty('delta'))
        obj.delta = ApiClient.convertToType(data['delta'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('exchange'))
        obj.exchange = ApiClient.convertToType(data['exchange'], 'String');
      if (data.hasOwnProperty('exchangeName'))
        obj.exchangeName = ApiClient.convertToType(data['exchangeName'], 'String');
      if (data.hasOwnProperty('gamma'))
        obj.gamma = ApiClient.convertToType(data['gamma'], 'Number');
      if (data.hasOwnProperty('highPrice'))
        obj.highPrice = ApiClient.convertToType(data['highPrice'], 'Number');
      if (data.hasOwnProperty('lastPrice'))
        obj.lastPrice = ApiClient.convertToType(data['lastPrice'], 'Number');
      if (data.hasOwnProperty('lastSize'))
        obj.lastSize = ApiClient.convertToType(data['lastSize'], 'Number');
      if (data.hasOwnProperty('lowPrice'))
        obj.lowPrice = ApiClient.convertToType(data['lowPrice'], 'Number');
      if (data.hasOwnProperty('mark'))
        obj.mark = ApiClient.convertToType(data['mark'], 'Number');
      if (data.hasOwnProperty('moneyIntrinsicValue'))
        obj.moneyIntrinsicValue = ApiClient.convertToType(data['moneyIntrinsicValue'], 'Number');
      if (data.hasOwnProperty('multiplier'))
        obj.multiplier = ApiClient.convertToType(data['multiplier'], 'Number');
      if (data.hasOwnProperty('netChange'))
        obj.netChange = ApiClient.convertToType(data['netChange'], 'Number');
      if (data.hasOwnProperty('openInterest'))
        obj.openInterest = ApiClient.convertToType(data['openInterest'], 'Number');
      if (data.hasOwnProperty('openPrice'))
        obj.openPrice = ApiClient.convertToType(data['openPrice'], 'Number');
      if (data.hasOwnProperty('quoteTimeInLong'))
        obj.quoteTimeInLong = ApiClient.convertToType(data['quoteTimeInLong'], 'Number');
      if (data.hasOwnProperty('rho'))
        obj.rho = ApiClient.convertToType(data['rho'], 'Number');
      if (data.hasOwnProperty('securityStatus'))
        obj.securityStatus = ApiClient.convertToType(data['securityStatus'], 'String');
      if (data.hasOwnProperty('settlementType'))
        obj.settlementType = ApiClient.convertToType(data['settlementType'], 'String');
      if (data.hasOwnProperty('strikePrice'))
        obj.strikePrice = ApiClient.convertToType(data['strikePrice'], 'Number');
      if (data.hasOwnProperty('symbol'))
        obj.symbol = ApiClient.convertToType(data['symbol'], 'String');
      if (data.hasOwnProperty('theoreticalOptionValue'))
        obj.theoreticalOptionValue = ApiClient.convertToType(data['theoreticalOptionValue'], 'Number');
      if (data.hasOwnProperty('theta'))
        obj.theta = ApiClient.convertToType(data['theta'], 'Number');
      if (data.hasOwnProperty('timeValue'))
        obj.timeValue = ApiClient.convertToType(data['timeValue'], 'Number');
      if (data.hasOwnProperty('totalVolume'))
        obj.totalVolume = ApiClient.convertToType(data['totalVolume'], 'Number');
      if (data.hasOwnProperty('tradeTimeInLong'))
        obj.tradeTimeInLong = ApiClient.convertToType(data['tradeTimeInLong'], 'Number');
      if (data.hasOwnProperty('underlying'))
        obj.underlying = ApiClient.convertToType(data['underlying'], 'String');
      if (data.hasOwnProperty('underlyingPrice'))
        obj.underlyingPrice = ApiClient.convertToType(data['underlyingPrice'], 'Number');
      if (data.hasOwnProperty('uvExpirationType'))
        obj.uvExpirationType = ApiClient.convertToType(data['uvExpirationType'], 'String');
      if (data.hasOwnProperty('vega'))
        obj.vega = ApiClient.convertToType(data['vega'], 'Number');
      if (data.hasOwnProperty('volatility'))
        obj.volatility = ApiClient.convertToType(data['volatility'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} askPrice
   */
  exports.prototype.askPrice = undefined;

  /**
   * @member {Number} askSize
   */
  exports.prototype.askSize = undefined;

  /**
   * @member {Number} bidPrice
   */
  exports.prototype.bidPrice = undefined;

  /**
   * @member {Number} bidSize
   */
  exports.prototype.bidSize = undefined;

  /**
   * @member {Number} closePrice
   */
  exports.prototype.closePrice = undefined;

  /**
   * @member {String} contractType
   */
  exports.prototype.contractType = undefined;

  /**
   * @member {String} deliverables
   */
  exports.prototype.deliverables = undefined;

  /**
   * @member {Number} delta
   */
  exports.prototype.delta = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {String} exchange
   */
  exports.prototype.exchange = undefined;

  /**
   * @member {String} exchangeName
   */
  exports.prototype.exchangeName = undefined;

  /**
   * @member {Number} gamma
   */
  exports.prototype.gamma = undefined;

  /**
   * @member {Number} highPrice
   */
  exports.prototype.highPrice = undefined;

  /**
   * @member {Number} lastPrice
   */
  exports.prototype.lastPrice = undefined;

  /**
   * @member {Number} lastSize
   */
  exports.prototype.lastSize = undefined;

  /**
   * @member {Number} lowPrice
   */
  exports.prototype.lowPrice = undefined;

  /**
   * @member {Number} mark
   */
  exports.prototype.mark = undefined;

  /**
   * @member {Number} moneyIntrinsicValue
   */
  exports.prototype.moneyIntrinsicValue = undefined;

  /**
   * @member {Number} multiplier
   */
  exports.prototype.multiplier = undefined;

  /**
   * @member {Number} netChange
   */
  exports.prototype.netChange = undefined;

  /**
   * @member {Number} openInterest
   */
  exports.prototype.openInterest = undefined;

  /**
   * @member {Number} openPrice
   */
  exports.prototype.openPrice = undefined;

  /**
   * @member {Number} quoteTimeInLong
   */
  exports.prototype.quoteTimeInLong = undefined;

  /**
   * @member {Number} rho
   */
  exports.prototype.rho = undefined;

  /**
   * @member {String} securityStatus
   */
  exports.prototype.securityStatus = undefined;

  /**
   * @member {String} settlementType
   */
  exports.prototype.settlementType = undefined;

  /**
   * @member {Number} strikePrice
   */
  exports.prototype.strikePrice = undefined;

  /**
   * @member {String} symbol
   */
  exports.prototype.symbol = undefined;

  /**
   * @member {Number} theoreticalOptionValue
   */
  exports.prototype.theoreticalOptionValue = undefined;

  /**
   * @member {Number} theta
   */
  exports.prototype.theta = undefined;

  /**
   * @member {Number} timeValue
   */
  exports.prototype.timeValue = undefined;

  /**
   * @member {Number} totalVolume
   */
  exports.prototype.totalVolume = undefined;

  /**
   * @member {Number} tradeTimeInLong
   */
  exports.prototype.tradeTimeInLong = undefined;

  /**
   * @member {String} underlying
   */
  exports.prototype.underlying = undefined;

  /**
   * @member {Number} underlyingPrice
   */
  exports.prototype.underlyingPrice = undefined;

  /**
   * @member {String} uvExpirationType
   */
  exports.prototype.uvExpirationType = undefined;

  /**
   * @member {Number} vega
   */
  exports.prototype.vega = undefined;

  /**
   * @member {Number} volatility
   */
  exports.prototype.volatility = undefined;

  return exports;

}));
