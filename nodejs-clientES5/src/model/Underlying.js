/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GitChrisQueen_TDA_JS) {
      root.GitChrisQueen_TDA_JS = {};
    }
    root.GitChrisQueen_TDA_JS.Underlying = factory(root.GitChrisQueen_TDA_JS.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Underlying model module.
   * @module model/Underlying
   * @version 0.1.4
   */

  /**
   * Constructs a new <code>Underlying</code>.
   * @alias module:model/Underlying
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Underlying</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Underlying} obj Optional instance to populate.
   * @return {module:model/Underlying} The populated <code>Underlying</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('ask'))
        obj.ask = ApiClient.convertToType(data['ask'], 'Number');
      if (data.hasOwnProperty('askSize'))
        obj.askSize = ApiClient.convertToType(data['askSize'], 'Number');
      if (data.hasOwnProperty('bid'))
        obj.bid = ApiClient.convertToType(data['bid'], 'Number');
      if (data.hasOwnProperty('bidSize'))
        obj.bidSize = ApiClient.convertToType(data['bidSize'], 'Number');
      if (data.hasOwnProperty('change'))
        obj.change = ApiClient.convertToType(data['change'], 'Number');
      if (data.hasOwnProperty('close'))
        obj.close = ApiClient.convertToType(data['close'], 'Number');
      if (data.hasOwnProperty('delayed'))
        obj.delayed = ApiClient.convertToType(data['delayed'], 'Boolean');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('exchangeName'))
        obj.exchangeName = ApiClient.convertToType(data['exchangeName'], 'String');
      if (data.hasOwnProperty('fiftyTwoWeekHigh'))
        obj.fiftyTwoWeekHigh = ApiClient.convertToType(data['fiftyTwoWeekHigh'], 'Number');
      if (data.hasOwnProperty('fiftyTwoWeekLow'))
        obj.fiftyTwoWeekLow = ApiClient.convertToType(data['fiftyTwoWeekLow'], 'Number');
      if (data.hasOwnProperty('highePrice'))
        obj.highePrice = ApiClient.convertToType(data['highePrice'], 'Number');
      if (data.hasOwnProperty('last'))
        obj.last = ApiClient.convertToType(data['last'], 'Number');
      if (data.hasOwnProperty('lowPrice'))
        obj.lowPrice = ApiClient.convertToType(data['lowPrice'], 'Number');
      if (data.hasOwnProperty('makrPercentChange'))
        obj.makrPercentChange = ApiClient.convertToType(data['makrPercentChange'], 'Number');
      if (data.hasOwnProperty('mark'))
        obj.mark = ApiClient.convertToType(data['mark'], 'Number');
      if (data.hasOwnProperty('markChange'))
        obj.markChange = ApiClient.convertToType(data['markChange'], 'Number');
      if (data.hasOwnProperty('openPrice'))
        obj.openPrice = ApiClient.convertToType(data['openPrice'], 'Number');
      if (data.hasOwnProperty('percentChange'))
        obj.percentChange = ApiClient.convertToType(data['percentChange'], 'Number');
      if (data.hasOwnProperty('quoteTime'))
        obj.quoteTime = ApiClient.convertToType(data['quoteTime'], 'Number');
      if (data.hasOwnProperty('symbol'))
        obj.symbol = ApiClient.convertToType(data['symbol'], 'String');
      if (data.hasOwnProperty('totalVolume'))
        obj.totalVolume = ApiClient.convertToType(data['totalVolume'], 'Number');
      if (data.hasOwnProperty('tradeTime'))
        obj.tradeTime = ApiClient.convertToType(data['tradeTime'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} ask
   */
  exports.prototype.ask = undefined;

  /**
   * @member {Number} askSize
   */
  exports.prototype.askSize = undefined;

  /**
   * @member {Number} bid
   */
  exports.prototype.bid = undefined;

  /**
   * @member {Number} bidSize
   */
  exports.prototype.bidSize = undefined;

  /**
   * @member {Number} change
   */
  exports.prototype.change = undefined;

  /**
   * @member {Number} close
   */
  exports.prototype.close = undefined;

  /**
   * @member {Boolean} delayed
   */
  exports.prototype.delayed = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {module:model/Underlying.ExchangeNameEnum} exchangeName
   */
  exports.prototype.exchangeName = undefined;

  /**
   * @member {Number} fiftyTwoWeekHigh
   */
  exports.prototype.fiftyTwoWeekHigh = undefined;

  /**
   * @member {Number} fiftyTwoWeekLow
   */
  exports.prototype.fiftyTwoWeekLow = undefined;

  /**
   * @member {Number} highePrice
   */
  exports.prototype.highePrice = undefined;

  /**
   * @member {Number} last
   */
  exports.prototype.last = undefined;

  /**
   * @member {Number} lowPrice
   */
  exports.prototype.lowPrice = undefined;

  /**
   * @member {Number} makrPercentChange
   */
  exports.prototype.makrPercentChange = undefined;

  /**
   * @member {Number} mark
   */
  exports.prototype.mark = undefined;

  /**
   * @member {Number} markChange
   */
  exports.prototype.markChange = undefined;

  /**
   * @member {Number} openPrice
   */
  exports.prototype.openPrice = undefined;

  /**
   * @member {Number} percentChange
   */
  exports.prototype.percentChange = undefined;

  /**
   * @member {Number} quoteTime
   */
  exports.prototype.quoteTime = undefined;

  /**
   * @member {String} symbol
   */
  exports.prototype.symbol = undefined;

  /**
   * @member {Number} totalVolume
   */
  exports.prototype.totalVolume = undefined;

  /**
   * @member {Number} tradeTime
   */
  exports.prototype.tradeTime = undefined;


  /**
   * Allowed values for the <code>exchangeName</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ExchangeNameEnum = {
    /**
     * value: "IND"
     * @const
     */
    IND: "IND",

    /**
     * value: "ASE"
     * @const
     */
    ASE: "ASE",

    /**
     * value: "NYS"
     * @const
     */
    NYS: "NYS",

    /**
     * value: "NAS"
     * @const
     */
    NAS: "NAS",

    /**
     * value: "NAP"
     * @const
     */
    NAP: "NAP",

    /**
     * value: "PAC"
     * @const
     */
    PAC: "PAC",

    /**
     * value: "OPR"
     * @const
     */
    OPR: "OPR",

    /**
     * value: "BATS"
     * @const
     */
    BATS: "BATS"
  };

  return exports;

}));
