/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TransactionTransactionItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TransactionTransactionItem'));
  } else {
    // Browser globals (root is window)
    if (!root.GitChrisQueen_TDA_JS) {
      root.GitChrisQueen_TDA_JS = {};
    }
    root.GitChrisQueen_TDA_JS.Transaction = factory(root.GitChrisQueen_TDA_JS.ApiClient, root.GitChrisQueen_TDA_JS.TransactionTransactionItem);
  }
}(this, function(ApiClient, TransactionTransactionItem) {
  'use strict';

  /**
   * The Transaction model module.
   * @module model/Transaction
   * @version 0.1.4
   */

  /**
   * Constructs a new <code>Transaction</code>.
   * @alias module:model/Transaction
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Transaction} obj Optional instance to populate.
   * @return {module:model/Transaction} The populated <code>Transaction</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('accruedInterest'))
        obj.accruedInterest = ApiClient.convertToType(data['accruedInterest'], 'Number');
      if (data.hasOwnProperty('achStatus'))
        obj.achStatus = ApiClient.convertToType(data['achStatus'], 'String');
      if (data.hasOwnProperty('cashBalanceEffectFlag'))
        obj.cashBalanceEffectFlag = ApiClient.convertToType(data['cashBalanceEffectFlag'], 'Boolean');
      if (data.hasOwnProperty('clearingReferenceNumber'))
        obj.clearingReferenceNumber = ApiClient.convertToType(data['clearingReferenceNumber'], 'String');
      if (data.hasOwnProperty('dayTradeBuyingPowerEffect'))
        obj.dayTradeBuyingPowerEffect = ApiClient.convertToType(data['dayTradeBuyingPowerEffect'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('fees'))
        obj.fees = ApiClient.convertToType(data['fees'], {'String': 'Number'});
      if (data.hasOwnProperty('netAmount'))
        obj.netAmount = ApiClient.convertToType(data['netAmount'], 'Number');
      if (data.hasOwnProperty('orderDate'))
        obj.orderDate = ApiClient.convertToType(data['orderDate'], 'Date');
      if (data.hasOwnProperty('orderId'))
        obj.orderId = ApiClient.convertToType(data['orderId'], 'String');
      if (data.hasOwnProperty('requirementReallocationAmount'))
        obj.requirementReallocationAmount = ApiClient.convertToType(data['requirementReallocationAmount'], 'Number');
      if (data.hasOwnProperty('settlementDate'))
        obj.settlementDate = ApiClient.convertToType(data['settlementDate'], 'Date');
      if (data.hasOwnProperty('sma'))
        obj.sma = ApiClient.convertToType(data['sma'], 'Number');
      if (data.hasOwnProperty('subAccount'))
        obj.subAccount = ApiClient.convertToType(data['subAccount'], 'String');
      if (data.hasOwnProperty('transactionDate'))
        obj.transactionDate = ApiClient.convertToType(data['transactionDate'], 'Date');
      if (data.hasOwnProperty('transactionId'))
        obj.transactionId = ApiClient.convertToType(data['transactionId'], 'Number');
      if (data.hasOwnProperty('transactionItem'))
        obj.transactionItem = TransactionTransactionItem.constructFromObject(data['transactionItem']);
      if (data.hasOwnProperty('transactionSubType'))
        obj.transactionSubType = ApiClient.convertToType(data['transactionSubType'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }

  /**
   * @member {Number} accruedInterest
   */
  exports.prototype.accruedInterest = undefined;

  /**
   * @member {module:model/Transaction.AchStatusEnum} achStatus
   */
  exports.prototype.achStatus = undefined;

  /**
   * @member {Boolean} cashBalanceEffectFlag
   * @default false
   */
  exports.prototype.cashBalanceEffectFlag = false;

  /**
   * @member {String} clearingReferenceNumber
   */
  exports.prototype.clearingReferenceNumber = undefined;

  /**
   * @member {Number} dayTradeBuyingPowerEffect
   */
  exports.prototype.dayTradeBuyingPowerEffect = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {Object.<String, Number>} fees
   */
  exports.prototype.fees = undefined;

  /**
   * @member {Number} netAmount
   */
  exports.prototype.netAmount = undefined;

  /**
   * @member {Date} orderDate
   */
  exports.prototype.orderDate = undefined;

  /**
   * @member {String} orderId
   */
  exports.prototype.orderId = undefined;

  /**
   * @member {Number} requirementReallocationAmount
   */
  exports.prototype.requirementReallocationAmount = undefined;

  /**
   * @member {Date} settlementDate
   */
  exports.prototype.settlementDate = undefined;

  /**
   * @member {Number} sma
   */
  exports.prototype.sma = undefined;

  /**
   * @member {String} subAccount
   */
  exports.prototype.subAccount = undefined;

  /**
   * @member {Date} transactionDate
   */
  exports.prototype.transactionDate = undefined;

  /**
   * @member {Number} transactionId
   */
  exports.prototype.transactionId = undefined;

  /**
   * @member {module:model/TransactionTransactionItem} transactionItem
   */
  exports.prototype.transactionItem = undefined;

  /**
   * @member {String} transactionSubType
   */
  exports.prototype.transactionSubType = undefined;

  /**
   * @member {module:model/Transaction.TypeEnum} type
   */
  exports.prototype.type = undefined;


  /**
   * Allowed values for the <code>achStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AchStatusEnum = {
    /**
     * value: "Approved"
     * @const
     */
    Approved: "Approved",

    /**
     * value: "Rejected"
     * @const
     */
    Rejected: "Rejected",

    /**
     * value: "Cancel"
     * @const
     */
    Cancel: "Cancel",

    /**
     * value: "Error"
     * @const
     */
    Error: "Error"
  };


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "TRADE"
     * @const
     */
    TRADE: "TRADE",

    /**
     * value: "RECEIVE_AND_DELIVER"
     * @const
     */
    RECEIVE_AND_DELIVER: "RECEIVE_AND_DELIVER",

    /**
     * value: "DIVIDEND_OR_INTEREST"
     * @const
     */
    DIVIDEND_OR_INTEREST: "DIVIDEND_OR_INTEREST",

    /**
     * value: "ACH_RECEIPT"
     * @const
     */
    ACH_RECEIPT: "ACH_RECEIPT",

    /**
     * value: "ACH_DISBURSEMENT"
     * @const
     */
    ACH_DISBURSEMENT: "ACH_DISBURSEMENT",

    /**
     * value: "CASH_RECEIPT"
     * @const
     */
    CASH_RECEIPT: "CASH_RECEIPT",

    /**
     * value: "CASH_DISBURSEMENT"
     * @const
     */
    CASH_DISBURSEMENT: "CASH_DISBURSEMENT",

    /**
     * value: "ELECTRONIC_FUND"
     * @const
     */
    ELECTRONIC_FUND: "ELECTRONIC_FUND",

    /**
     * value: "WIRE_OUT"
     * @const
     */
    WIRE_OUT: "WIRE_OUT",

    /**
     * value: "WIRE_IN"
     * @const
     */
    WIRE_IN: "WIRE_IN",

    /**
     * value: "JOURNAL"
     * @const
     */
    JOURNAL: "JOURNAL",

    /**
     * value: "MEMORANDUM"
     * @const
     */
    MEMORANDUM: "MEMORANDUM",

    /**
     * value: "MARGIN_CALL"
     * @const
     */
    MARGIN_CALL: "MARGIN_CALL",

    /**
     * value: "MONEY_MARKET"
     * @const
     */
    MONEY_MARKET: "MONEY_MARKET",

    /**
     * value: "SMA_ADJUSTMENT"
     * @const
     */
    SMA_ADJUSTMENT: "SMA_ADJUSTMENT"
  };

  return exports;

}));
