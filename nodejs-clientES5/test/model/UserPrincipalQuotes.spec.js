/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UserPrincipalQuotes', function() {
      beforeEach(function() {
        instance = new GitChrisQueen_TDA_JS.UserPrincipalQuotes();
      });

      it('should create an instance of UserPrincipalQuotes', function() {
        // TODO: update the code to test UserPrincipalQuotes
        expect(instance).to.be.a(GitChrisQueen_TDA_JS.UserPrincipalQuotes);
      });

      it('should have the property isAmexDelayed (base name: "isAmexDelayed")', function() {
        // TODO: update the code to test the property isAmexDelayed
        expect(instance).to.have.property('isAmexDelayed');
        // expect(instance.isAmexDelayed).to.be(expectedValueLiteral);
      });

      it('should have the property isCmeDelayed (base name: "isCmeDelayed")', function() {
        // TODO: update the code to test the property isCmeDelayed
        expect(instance).to.have.property('isCmeDelayed');
        // expect(instance.isCmeDelayed).to.be(expectedValueLiteral);
      });

      it('should have the property isForexDelayed (base name: "isForexDelayed")', function() {
        // TODO: update the code to test the property isForexDelayed
        expect(instance).to.have.property('isForexDelayed');
        // expect(instance.isForexDelayed).to.be(expectedValueLiteral);
      });

      it('should have the property isIceDelayed (base name: "isIceDelayed")', function() {
        // TODO: update the code to test the property isIceDelayed
        expect(instance).to.have.property('isIceDelayed');
        // expect(instance.isIceDelayed).to.be(expectedValueLiteral);
      });

      it('should have the property isNasdaqDelayed (base name: "isNasdaqDelayed")', function() {
        // TODO: update the code to test the property isNasdaqDelayed
        expect(instance).to.have.property('isNasdaqDelayed');
        // expect(instance.isNasdaqDelayed).to.be(expectedValueLiteral);
      });

      it('should have the property isNyseDelayed (base name: "isNyseDelayed")', function() {
        // TODO: update the code to test the property isNyseDelayed
        expect(instance).to.have.property('isNyseDelayed');
        // expect(instance.isNyseDelayed).to.be(expectedValueLiteral);
      });

      it('should have the property isOpraDelayed (base name: "isOpraDelayed")', function() {
        // TODO: update the code to test the property isOpraDelayed
        expect(instance).to.have.property('isOpraDelayed');
        // expect(instance.isOpraDelayed).to.be(expectedValueLiteral);
      });

    });
  });

}));
