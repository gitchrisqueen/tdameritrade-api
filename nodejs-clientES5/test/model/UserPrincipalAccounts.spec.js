/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UserPrincipalAccounts', function() {
      beforeEach(function() {
        instance = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      });

      it('should create an instance of UserPrincipalAccounts', function() {
        // TODO: update the code to test UserPrincipalAccounts
        expect(instance).to.be.a(GitChrisQueen_TDA_JS.UserPrincipalAccounts);
      });

      it('should have the property accountCdDomainId (base name: "accountCdDomainId")', function() {
        // TODO: update the code to test the property accountCdDomainId
        expect(instance).to.have.property('accountCdDomainId');
        // expect(instance.accountCdDomainId).to.be(expectedValueLiteral);
      });

      it('should have the property accountId (base name: "accountId")', function() {
        // TODO: update the code to test the property accountId
        expect(instance).to.have.property('accountId');
        // expect(instance.accountId).to.be(expectedValueLiteral);
      });

      it('should have the property acl (base name: "acl")', function() {
        // TODO: update the code to test the property acl
        expect(instance).to.have.property('acl');
        // expect(instance.acl).to.be(expectedValueLiteral);
      });

      it('should have the property authorizations (base name: "authorizations")', function() {
        // TODO: update the code to test the property authorizations
        expect(instance).to.have.property('authorizations');
        // expect(instance.authorizations).to.be(expectedValueLiteral);
      });

      it('should have the property company (base name: "company")', function() {
        // TODO: update the code to test the property company
        expect(instance).to.have.property('company');
        // expect(instance.company).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property displayName (base name: "displayName")', function() {
        // TODO: update the code to test the property displayName
        expect(instance).to.have.property('displayName');
        // expect(instance.displayName).to.be(expectedValueLiteral);
      });

      it('should have the property preferences (base name: "preferences")', function() {
        // TODO: update the code to test the property preferences
        expect(instance).to.have.property('preferences');
        // expect(instance.preferences).to.be(expectedValueLiteral);
      });

      it('should have the property segment (base name: "segment")', function() {
        // TODO: update the code to test the property segment
        expect(instance).to.have.property('segment');
        // expect(instance.segment).to.be(expectedValueLiteral);
      });

      it('should have the property surrogateIds (base name: "surrogateIds")', function() {
        // TODO: update the code to test the property surrogateIds
        expect(instance).to.have.property('surrogateIds');
        // expect(instance.surrogateIds).to.be(expectedValueLiteral);
      });

    });
  });

}));
