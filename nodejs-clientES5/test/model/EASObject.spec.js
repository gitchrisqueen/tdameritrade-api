/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('EASObject', function() {
      beforeEach(function() {
        instance = new GitChrisQueen_TDA_JS.EASObject();
      });

      it('should create an instance of EASObject', function() {
        // TODO: update the code to test EASObject
        expect(instance).to.be.a(GitChrisQueen_TDA_JS.EASObject);
      });

      it('should have the property access_token (base name: "access_token")', function() {
        // TODO: update the code to test the property access_token
        expect(instance).to.have.property('access_token');
        // expect(instance.access_token).to.be(expectedValueLiteral);
      });

      it('should have the property expires_in (base name: "expires_in")', function() {
        // TODO: update the code to test the property expires_in
        expect(instance).to.have.property('expires_in');
        // expect(instance.expires_in).to.be(expectedValueLiteral);
      });

      it('should have the property refresh_token (base name: "refresh_token")', function() {
        // TODO: update the code to test the property refresh_token
        expect(instance).to.have.property('refresh_token');
        // expect(instance.refresh_token).to.be(expectedValueLiteral);
      });

      it('should have the property refresh_token_expires_in (base name: "refresh_token_expires_in")', function() {
        // TODO: update the code to test the property refresh_token_expires_in
        expect(instance).to.have.property('refresh_token_expires_in');
        // expect(instance.refresh_token_expires_in).to.be(expectedValueLiteral);
      });

      it('should have the property scope (base name: "scope")', function() {
        // TODO: update the code to test the property scope
        expect(instance).to.have.property('scope');
        // expect(instance.scope).to.be(expectedValueLiteral);
      });

      it('should have the property token_type (base name: "token_type")', function() {
        // TODO: update the code to test the property token_type
        expect(instance).to.have.property('token_type');
        // expect(instance.token_type).to.be(expectedValueLiteral);
      });

    });
  });

}));
