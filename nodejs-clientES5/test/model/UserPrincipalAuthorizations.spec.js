/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UserPrincipalAuthorizations', function() {
      beforeEach(function() {
        instance = new GitChrisQueen_TDA_JS.UserPrincipalAuthorizations();
      });

      it('should create an instance of UserPrincipalAuthorizations', function() {
        // TODO: update the code to test UserPrincipalAuthorizations
        expect(instance).to.be.a(GitChrisQueen_TDA_JS.UserPrincipalAuthorizations);
      });

      it('should have the property advancedMargin (base name: "advancedMargin")', function() {
        // TODO: update the code to test the property advancedMargin
        expect(instance).to.have.property('advancedMargin');
        // expect(instance.advancedMargin).to.be(expectedValueLiteral);
      });

      it('should have the property apex (base name: "apex")', function() {
        // TODO: update the code to test the property apex
        expect(instance).to.have.property('apex');
        // expect(instance.apex).to.be(expectedValueLiteral);
      });

      it('should have the property levelTwoQuotes (base name: "levelTwoQuotes")', function() {
        // TODO: update the code to test the property levelTwoQuotes
        expect(instance).to.have.property('levelTwoQuotes');
        // expect(instance.levelTwoQuotes).to.be(expectedValueLiteral);
      });

      it('should have the property marginTrading (base name: "marginTrading")', function() {
        // TODO: update the code to test the property marginTrading
        expect(instance).to.have.property('marginTrading');
        // expect(instance.marginTrading).to.be(expectedValueLiteral);
      });

      it('should have the property optionTradingLevel (base name: "optionTradingLevel")', function() {
        // TODO: update the code to test the property optionTradingLevel
        expect(instance).to.have.property('optionTradingLevel');
        // expect(instance.optionTradingLevel).to.be(expectedValueLiteral);
      });

      it('should have the property scottradeAccount (base name: "scottradeAccount")', function() {
        // TODO: update the code to test the property scottradeAccount
        expect(instance).to.have.property('scottradeAccount');
        // expect(instance.scottradeAccount).to.be(expectedValueLiteral);
      });

      it('should have the property stockTrading (base name: "stockTrading")', function() {
        // TODO: update the code to test the property stockTrading
        expect(instance).to.have.property('stockTrading');
        // expect(instance.stockTrading).to.be(expectedValueLiteral);
      });

      it('should have the property streamerAccess (base name: "streamerAccess")', function() {
        // TODO: update the code to test the property streamerAccess
        expect(instance).to.have.property('streamerAccess');
        // expect(instance.streamerAccess).to.be(expectedValueLiteral);
      });

      it('should have the property streamingNews (base name: "streamingNews")', function() {
        // TODO: update the code to test the property streamingNews
        expect(instance).to.have.property('streamingNews');
        // expect(instance.streamingNews).to.be(expectedValueLiteral);
      });

    });
  });

}));
