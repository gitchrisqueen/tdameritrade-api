/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Hours', function() {
      beforeEach(function() {
        instance = new GitChrisQueen_TDA_JS.Hours();
      });

      it('should create an instance of Hours', function() {
        // TODO: update the code to test Hours
        expect(instance).to.be.a(GitChrisQueen_TDA_JS.Hours);
      });

      it('should have the property category (base name: "category")', function() {
        // TODO: update the code to test the property category
        expect(instance).to.have.property('category');
        // expect(instance.category).to.be(expectedValueLiteral);
      });

      it('should have the property _date (base name: "date")', function() {
        // TODO: update the code to test the property _date
        expect(instance).to.have.property('_date');
        // expect(instance._date).to.be(expectedValueLiteral);
      });

      it('should have the property exchange (base name: "exchange")', function() {
        // TODO: update the code to test the property exchange
        expect(instance).to.have.property('exchange');
        // expect(instance.exchange).to.be(expectedValueLiteral);
      });

      it('should have the property isOpen (base name: "isOpen")', function() {
        // TODO: update the code to test the property isOpen
        expect(instance).to.have.property('isOpen');
        // expect(instance.isOpen).to.be(expectedValueLiteral);
      });

      it('should have the property marketType (base name: "marketType")', function() {
        // TODO: update the code to test the property marketType
        expect(instance).to.have.property('marketType');
        // expect(instance.marketType).to.be(expectedValueLiteral);
      });

      it('should have the property product (base name: "product")', function() {
        // TODO: update the code to test the property product
        expect(instance).to.have.property('product');
        // expect(instance.product).to.be(expectedValueLiteral);
      });

      it('should have the property productName (base name: "productName")', function() {
        // TODO: update the code to test the property productName
        expect(instance).to.have.property('productName');
        // expect(instance.productName).to.be(expectedValueLiteral);
      });

      it('should have the property sessionHours (base name: "sessionHours")', function() {
        // TODO: update the code to test the property sessionHours
        expect(instance).to.have.property('sessionHours');
        // expect(instance.sessionHours).to.be(expectedValueLiteral);
      });

    });
  });

}));
