/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MarginAccount', function() {
      beforeEach(function() {
        instance = new GitChrisQueen_TDA_JS.MarginAccount();
      });

      it('should create an instance of MarginAccount', function() {
        // TODO: update the code to test MarginAccount
        expect(instance).to.be.a(GitChrisQueen_TDA_JS.MarginAccount);
      });

      it('should have the property accountId (base name: "accountId")', function() {
        // TODO: update the code to test the property accountId
        expect(instance).to.have.property('accountId');
        // expect(instance.accountId).to.be(expectedValueLiteral);
      });

      it('should have the property currentBalances (base name: "currentBalances")', function() {
        // TODO: update the code to test the property currentBalances
        expect(instance).to.have.property('currentBalances');
        // expect(instance.currentBalances).to.be(expectedValueLiteral);
      });

      it('should have the property initialBalances (base name: "initialBalances")', function() {
        // TODO: update the code to test the property initialBalances
        expect(instance).to.have.property('initialBalances');
        // expect(instance.initialBalances).to.be(expectedValueLiteral);
      });

      it('should have the property isClosingOnlyRestricted (base name: "isClosingOnlyRestricted")', function() {
        // TODO: update the code to test the property isClosingOnlyRestricted
        expect(instance).to.have.property('isClosingOnlyRestricted');
        // expect(instance.isClosingOnlyRestricted).to.be(expectedValueLiteral);
      });

      it('should have the property isDayTrader (base name: "isDayTrader")', function() {
        // TODO: update the code to test the property isDayTrader
        expect(instance).to.have.property('isDayTrader');
        // expect(instance.isDayTrader).to.be(expectedValueLiteral);
      });

      it('should have the property orderStrategies (base name: "orderStrategies")', function() {
        // TODO: update the code to test the property orderStrategies
        expect(instance).to.have.property('orderStrategies');
        // expect(instance.orderStrategies).to.be(expectedValueLiteral);
      });

      it('should have the property positions (base name: "positions")', function() {
        // TODO: update the code to test the property positions
        expect(instance).to.have.property('positions');
        // expect(instance.positions).to.be(expectedValueLiteral);
      });

      it('should have the property projectedBalances (base name: "projectedBalances")', function() {
        // TODO: update the code to test the property projectedBalances
        expect(instance).to.have.property('projectedBalances');
        // expect(instance.projectedBalances).to.be(expectedValueLiteral);
      });

      it('should have the property roundTrips (base name: "roundTrips")', function() {
        // TODO: update the code to test the property roundTrips
        expect(instance).to.have.property('roundTrips');
        // expect(instance.roundTrips).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

    });
  });

}));
