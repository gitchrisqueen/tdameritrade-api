/*
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.@GitchrisqueenTdameritradeApiJsClient) {
      root.@GitchrisqueenTdameritradeApiJsClient = {};
    }
    root.@GitchrisqueenTdameritradeApiJsClient.AuthenticationApi = factory(root.@GitchrisqueenTdameritradeApiJsClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Authentication service.
   * @module api/AuthenticationApi
   * @version 0.1.3
   */

  /**
   * Constructs a new AuthenticationApi. 
   * @alias module:api/AuthenticationApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Post Access Token
     * The token endpoint returns an access token along with an optional refresh token.
     * @param {String} GrantType The grant type of the oAuth scheme. Possible values are authorization_code, refresh_token
     * @param {Number} ClientId OAuth User ID of your application
     * @param {Object} opts Optional parameters
     * @param {String} opts.RefreshToken Required if using refresh token grant
     * @param {String} opts.AccessType Set to offline to receive a refresh token on an authorization_code grant type request. Do not set to offline on a refresh_token grant type request.
     * @param {String} opts.Code Required if trying to use authorization code grant
     * @param {String} opts.RedirectUri Required if trying to use authorization code grant
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.oauth2TokenPOSTWithHttpInfo = function(GrantType, ClientId, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'GrantType' is set
      if (GrantType === undefined || GrantType === null) {
        throw new Error("Missing the required parameter 'GrantType' when calling oauth2TokenPOST");
      }

      // verify the required parameter 'ClientId' is set
      if (ClientId === undefined || ClientId === null) {
        throw new Error("Missing the required parameter 'ClientId' when calling oauth2TokenPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'grant_type': GrantType,
        'refresh_token': opts['RefreshToken'],
        'access_type': opts['AccessType'],
        'code': opts['Code'],
        'client_id': ClientId,
        'redirect_uri': opts['RedirectUri']
      };

      var authNames = [];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/oauth2/token', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Post Access Token
     * The token endpoint returns an access token along with an optional refresh token.
     * @param {String} GrantType The grant type of the oAuth scheme. Possible values are authorization_code, refresh_token
     * @param {Number} ClientId OAuth User ID of your application
     * @param {Object} opts Optional parameters
     * @param {String} opts.RefreshToken Required if using refresh token grant
     * @param {String} opts.AccessType Set to offline to receive a refresh token on an authorization_code grant type request. Do not set to offline on a refresh_token grant type request.
     * @param {String} opts.Code Required if trying to use authorization code grant
     * @param {String} opts.RedirectUri Required if trying to use authorization code grant
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.oauth2TokenPOST = function(GrantType, ClientId, opts) {
      return this.oauth2TokenPOSTWithHttpInfo(GrantType, ClientId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
