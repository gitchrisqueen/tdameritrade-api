/**
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserPrincipalAccounts', function() {
    it('should create an instance of UserPrincipalAccounts', function() {
      // uncomment below and update the code to test UserPrincipalAccounts
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be.a(GitChrisQueen_TDA_JS.UserPrincipalAccounts);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property accountCdDomainId (base name: "accountCdDomainId")', function() {
      // uncomment below and update the code to test the property accountCdDomainId
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property segment (base name: "segment")', function() {
      // uncomment below and update the code to test the property segment
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property surrogateIds (base name: "surrogateIds")', function() {
      // uncomment below and update the code to test the property surrogateIds
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property preferences (base name: "preferences")', function() {
      // uncomment below and update the code to test the property preferences
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property acl (base name: "acl")', function() {
      // uncomment below and update the code to test the property acl
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

    it('should have the property authorizations (base name: "authorizations")', function() {
      // uncomment below and update the code to test the property authorizations
      //var instane = new GitChrisQueen_TDA_JS.UserPrincipalAccounts();
      //expect(instance).to.be();
    });

  });

}));
