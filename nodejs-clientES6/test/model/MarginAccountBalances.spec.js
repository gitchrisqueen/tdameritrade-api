/**
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitChrisQueen_TDA_JS.MarginAccountBalances();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MarginAccountBalances', function() {
    it('should create an instance of MarginAccountBalances', function() {
      // uncomment below and update the code to test MarginAccountBalances
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be.a(GitChrisQueen_TDA_JS.MarginAccountBalances);
    });

    it('should have the property accruedInterest (base name: "accruedInterest")', function() {
      // uncomment below and update the code to test the property accruedInterest
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property cashBalance (base name: "cashBalance")', function() {
      // uncomment below and update the code to test the property cashBalance
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property cashReceipts (base name: "cashReceipts")', function() {
      // uncomment below and update the code to test the property cashReceipts
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property longOptionMarketValue (base name: "longOptionMarketValue")', function() {
      // uncomment below and update the code to test the property longOptionMarketValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property liquidationValue (base name: "liquidationValue")', function() {
      // uncomment below and update the code to test the property liquidationValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property longMarketValue (base name: "longMarketValue")', function() {
      // uncomment below and update the code to test the property longMarketValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property moneyMarketFund (base name: "moneyMarketFund")', function() {
      // uncomment below and update the code to test the property moneyMarketFund
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property savings (base name: "savings")', function() {
      // uncomment below and update the code to test the property savings
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property shortMarketValue (base name: "shortMarketValue")', function() {
      // uncomment below and update the code to test the property shortMarketValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property pendingDeposits (base name: "pendingDeposits")', function() {
      // uncomment below and update the code to test the property pendingDeposits
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property availableFunds (base name: "availableFunds")', function() {
      // uncomment below and update the code to test the property availableFunds
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property availableFundsNonMarginableTrade (base name: "availableFundsNonMarginableTrade")', function() {
      // uncomment below and update the code to test the property availableFundsNonMarginableTrade
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property buyingPower (base name: "buyingPower")', function() {
      // uncomment below and update the code to test the property buyingPower
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property buyingPowerNonMarginableTrade (base name: "buyingPowerNonMarginableTrade")', function() {
      // uncomment below and update the code to test the property buyingPowerNonMarginableTrade
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property dayTradingBuyingPower (base name: "dayTradingBuyingPower")', function() {
      // uncomment below and update the code to test the property dayTradingBuyingPower
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property dayTradingBuyingPowerCall (base name: "dayTradingBuyingPowerCall")', function() {
      // uncomment below and update the code to test the property dayTradingBuyingPowerCall
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property equity (base name: "equity")', function() {
      // uncomment below and update the code to test the property equity
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property equityPercentage (base name: "equityPercentage")', function() {
      // uncomment below and update the code to test the property equityPercentage
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property longMarginValue (base name: "longMarginValue")', function() {
      // uncomment below and update the code to test the property longMarginValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceCall (base name: "maintenanceCall")', function() {
      // uncomment below and update the code to test the property maintenanceCall
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceRequirement (base name: "maintenanceRequirement")', function() {
      // uncomment below and update the code to test the property maintenanceRequirement
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property marginBalance (base name: "marginBalance")', function() {
      // uncomment below and update the code to test the property marginBalance
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property regTCall (base name: "regTCall")', function() {
      // uncomment below and update the code to test the property regTCall
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property shortBalance (base name: "shortBalance")', function() {
      // uncomment below and update the code to test the property shortBalance
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property shortMarginValue (base name: "shortMarginValue")', function() {
      // uncomment below and update the code to test the property shortMarginValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property shortOptionMarketValue (base name: "shortOptionMarketValue")', function() {
      // uncomment below and update the code to test the property shortOptionMarketValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property sma (base name: "sma")', function() {
      // uncomment below and update the code to test the property sma
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property mutualFundValue (base name: "mutualFundValue")', function() {
      // uncomment below and update the code to test the property mutualFundValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property bondValue (base name: "bondValue")', function() {
      // uncomment below and update the code to test the property bondValue
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property isInCall (base name: "isInCall")', function() {
      // uncomment below and update the code to test the property isInCall
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property stockBuyingPower (base name: "stockBuyingPower")', function() {
      // uncomment below and update the code to test the property stockBuyingPower
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

    it('should have the property optionBuyingPower (base name: "optionBuyingPower")', function() {
      // uncomment below and update the code to test the property optionBuyingPower
      //var instane = new GitChrisQueen_TDA_JS.MarginAccountBalances();
      //expect(instance).to.be();
    });

  });

}));
