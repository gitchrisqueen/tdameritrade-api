/**
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitChrisQueen_TDA_JS.FundamentalData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FundamentalData', function() {
    it('should create an instance of FundamentalData', function() {
      // uncomment below and update the code to test FundamentalData
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be.a(GitChrisQueen_TDA_JS.FundamentalData);
    });

    it('should have the property Symbol (base name: "symbol")', function() {
      // uncomment below and update the code to test the property Symbol
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property High52 (base name: "high52")', function() {
      // uncomment below and update the code to test the property High52
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property Low52 (base name: "low52")', function() {
      // uncomment below and update the code to test the property Low52
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property DividendAmount (base name: "dividendAmount")', function() {
      // uncomment below and update the code to test the property DividendAmount
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property DividendYield (base name: "dividendYield")', function() {
      // uncomment below and update the code to test the property DividendYield
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property DividendDate (base name: "dividendDate")', function() {
      // uncomment below and update the code to test the property DividendDate
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property PeRatio (base name: "peRatio")', function() {
      // uncomment below and update the code to test the property PeRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property PegRatio (base name: "pegRatio")', function() {
      // uncomment below and update the code to test the property PegRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property PbRatio (base name: "pbRatio")', function() {
      // uncomment below and update the code to test the property PbRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property PrRatio (base name: "prRatio")', function() {
      // uncomment below and update the code to test the property PrRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property PcfRatio (base name: "pcfRatio")', function() {
      // uncomment below and update the code to test the property PcfRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property GrossMarginTTM (base name: "grossMarginTTM")', function() {
      // uncomment below and update the code to test the property GrossMarginTTM
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property GrossMarginMRQ (base name: "grossMarginMRQ")', function() {
      // uncomment below and update the code to test the property GrossMarginMRQ
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property NetProfitMarginTTM (base name: "netProfitMarginTTM")', function() {
      // uncomment below and update the code to test the property NetProfitMarginTTM
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property NetProfitMarginMRQ (base name: "netProfitMarginMRQ")', function() {
      // uncomment below and update the code to test the property NetProfitMarginMRQ
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property OperatingMarginTTM (base name: "operatingMarginTTM")', function() {
      // uncomment below and update the code to test the property OperatingMarginTTM
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property OperatingMarginMRQ (base name: "operatingMarginMRQ")', function() {
      // uncomment below and update the code to test the property OperatingMarginMRQ
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property ReturnOnEquity (base name: "returnOnEquity")', function() {
      // uncomment below and update the code to test the property ReturnOnEquity
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property ReturnOnAssets (base name: "returnOnAssets")', function() {
      // uncomment below and update the code to test the property ReturnOnAssets
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property ReturnOnInvestment (base name: "returnOnInvestment")', function() {
      // uncomment below and update the code to test the property ReturnOnInvestment
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property QuickRatio (base name: "quickRatio")', function() {
      // uncomment below and update the code to test the property QuickRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property CurrentRatio (base name: "currentRatio")', function() {
      // uncomment below and update the code to test the property CurrentRatio
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property InterestCoverage (base name: "interestCoverage")', function() {
      // uncomment below and update the code to test the property InterestCoverage
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property TotalDebtToCapital (base name: "totalDebtToCapital")', function() {
      // uncomment below and update the code to test the property TotalDebtToCapital
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property LtDebtToEquity (base name: "ltDebtToEquity")', function() {
      // uncomment below and update the code to test the property LtDebtToEquity
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property TotalDebtToEquity (base name: "totalDebtToEquity")', function() {
      // uncomment below and update the code to test the property TotalDebtToEquity
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property EpsTTM (base name: "epsTTM")', function() {
      // uncomment below and update the code to test the property EpsTTM
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property EpsChangePercentTTM (base name: "epsChangePercentTTM")', function() {
      // uncomment below and update the code to test the property EpsChangePercentTTM
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property EpsChangeYear (base name: "epsChangeYear")', function() {
      // uncomment below and update the code to test the property EpsChangeYear
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property EpsChange (base name: "epsChange")', function() {
      // uncomment below and update the code to test the property EpsChange
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property RevChangeYear (base name: "revChangeYear")', function() {
      // uncomment below and update the code to test the property RevChangeYear
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property RevChangeTTM (base name: "revChangeTTM")', function() {
      // uncomment below and update the code to test the property RevChangeTTM
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property RevChangeIn (base name: "revChangeIn")', function() {
      // uncomment below and update the code to test the property RevChangeIn
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property SharesOutstanding (base name: "sharesOutstanding")', function() {
      // uncomment below and update the code to test the property SharesOutstanding
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property MarketCapFloat (base name: "marketCapFloat")', function() {
      // uncomment below and update the code to test the property MarketCapFloat
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property MarketCap (base name: "marketCap")', function() {
      // uncomment below and update the code to test the property MarketCap
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property BookValuePerShare (base name: "bookValuePerShare")', function() {
      // uncomment below and update the code to test the property BookValuePerShare
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property ShortIntToFloat (base name: "shortIntToFloat")', function() {
      // uncomment below and update the code to test the property ShortIntToFloat
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property ShortIntDayToCover (base name: "shortIntDayToCover")', function() {
      // uncomment below and update the code to test the property ShortIntDayToCover
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property DivGrowthRate3Year (base name: "divGrowthRate3Year")', function() {
      // uncomment below and update the code to test the property DivGrowthRate3Year
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property DividendPayAmount (base name: "dividendPayAmount")', function() {
      // uncomment below and update the code to test the property DividendPayAmount
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property DividendPayDate (base name: "dividendPayDate")', function() {
      // uncomment below and update the code to test the property DividendPayDate
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property Beta (base name: "beta")', function() {
      // uncomment below and update the code to test the property Beta
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property Vol1DayAvg (base name: "vol1DayAvg")', function() {
      // uncomment below and update the code to test the property Vol1DayAvg
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property Vol10DayAvg (base name: "vol10DayAvg")', function() {
      // uncomment below and update the code to test the property Vol10DayAvg
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

    it('should have the property Vol3MonthAvg (base name: "vol3MonthAvg")', function() {
      // uncomment below and update the code to test the property Vol3MonthAvg
      //var instane = new GitChrisQueen_TDA_JS.FundamentalData();
      //expect(instance).to.be();
    });

  });

}));
