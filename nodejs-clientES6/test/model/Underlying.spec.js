/**
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitChrisQueen_TDA_JS);
  }
}(this, function(expect, GitChrisQueen_TDA_JS) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitChrisQueen_TDA_JS.Underlying();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Underlying', function() {
    it('should create an instance of Underlying', function() {
      // uncomment below and update the code to test Underlying
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be.a(GitChrisQueen_TDA_JS.Underlying);
    });

    it('should have the property ask (base name: "ask")', function() {
      // uncomment below and update the code to test the property ask
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property askSize (base name: "askSize")', function() {
      // uncomment below and update the code to test the property askSize
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property bid (base name: "bid")', function() {
      // uncomment below and update the code to test the property bid
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property bidSize (base name: "bidSize")', function() {
      // uncomment below and update the code to test the property bidSize
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property change (base name: "change")', function() {
      // uncomment below and update the code to test the property change
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property close (base name: "close")', function() {
      // uncomment below and update the code to test the property close
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property delayed (base name: "delayed")', function() {
      // uncomment below and update the code to test the property delayed
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property exchangeName (base name: "exchangeName")', function() {
      // uncomment below and update the code to test the property exchangeName
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property fiftyTwoWeekHigh (base name: "fiftyTwoWeekHigh")', function() {
      // uncomment below and update the code to test the property fiftyTwoWeekHigh
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property fiftyTwoWeekLow (base name: "fiftyTwoWeekLow")', function() {
      // uncomment below and update the code to test the property fiftyTwoWeekLow
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property highePrice (base name: "highePrice")', function() {
      // uncomment below and update the code to test the property highePrice
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property last (base name: "last")', function() {
      // uncomment below and update the code to test the property last
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property lowPrice (base name: "lowPrice")', function() {
      // uncomment below and update the code to test the property lowPrice
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property mark (base name: "mark")', function() {
      // uncomment below and update the code to test the property mark
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property markChange (base name: "markChange")', function() {
      // uncomment below and update the code to test the property markChange
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property makrPercentChange (base name: "makrPercentChange")', function() {
      // uncomment below and update the code to test the property makrPercentChange
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property openPrice (base name: "openPrice")', function() {
      // uncomment below and update the code to test the property openPrice
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property percentChange (base name: "percentChange")', function() {
      // uncomment below and update the code to test the property percentChange
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property quoteTime (base name: "quoteTime")', function() {
      // uncomment below and update the code to test the property quoteTime
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property symbol (base name: "symbol")', function() {
      // uncomment below and update the code to test the property symbol
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property totalVolume (base name: "totalVolume")', function() {
      // uncomment below and update the code to test the property totalVolume
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

    it('should have the property tradeTime (base name: "tradeTime")', function() {
      // uncomment below and update the code to test the property tradeTime
      //var instane = new GitChrisQueen_TDA_JS.Underlying();
      //expect(instance).to.be();
    });

  });

}));
