/**
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionTransactionItemInstrument from './TransactionTransactionItemInstrument';

/**
* The TransactionTransactionItem model module.
* @module model/TransactionTransactionItem
* @version 0.1.4
*/
export default class TransactionTransactionItem {
    /**
    * Constructs a new <code>TransactionTransactionItem</code>.
    * @alias module:model/TransactionTransactionItem
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>TransactionTransactionItem</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/TransactionTransactionItem} obj Optional instance to populate.
    * @return {module:model/TransactionTransactionItem} The populated <code>TransactionTransactionItem</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionTransactionItem();
                        
            
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'Number');
            }
            if (data.hasOwnProperty('parentOrderKey')) {
                obj['parentOrderKey'] = ApiClient.convertToType(data['parentOrderKey'], 'Number');
            }
            if (data.hasOwnProperty('parentChildIndicator')) {
                obj['parentChildIndicator'] = ApiClient.convertToType(data['parentChildIndicator'], 'String');
            }
            if (data.hasOwnProperty('instruction')) {
                obj['instruction'] = ApiClient.convertToType(data['instruction'], 'String');
            }
            if (data.hasOwnProperty('positionEffect')) {
                obj['positionEffect'] = ApiClient.convertToType(data['positionEffect'], 'String');
            }
            if (data.hasOwnProperty('instrument')) {
                obj['instrument'] = TransactionTransactionItemInstrument.constructFromObject(data['instrument']);
            }
        }
        return obj;
    }

    /**
    * @member {Number} accountId
    */
    'accountId' = undefined;
    /**
    * @member {Number} amount
    */
    'amount' = undefined;
    /**
    * @member {Number} price
    */
    'price' = undefined;
    /**
    * @member {Number} cost
    */
    'cost' = undefined;
    /**
    * @member {Number} parentOrderKey
    */
    'parentOrderKey' = undefined;
    /**
    * @member {String} parentChildIndicator
    */
    'parentChildIndicator' = undefined;
    /**
    * @member {module:model/TransactionTransactionItem.InstructionEnum} instruction
    */
    'instruction' = undefined;
    /**
    * @member {module:model/TransactionTransactionItem.PositionEffectEnum} positionEffect
    */
    'positionEffect' = undefined;
    /**
    * @member {module:model/TransactionTransactionItemInstrument} instrument
    */
    'instrument' = undefined;



    /**
    * Allowed values for the <code>instruction</code> property.
    * @enum {String}
    * @readonly
    */
    static InstructionEnum = {
        /**
         * value: "BUY"
         * @const
         */
        "BUY": "BUY",
        /**
         * value: "SELL"
         * @const
         */
        "SELL": "SELL"    };
    /**
    * Allowed values for the <code>positionEffect</code> property.
    * @enum {String}
    * @readonly
    */
    static PositionEffectEnum = {
        /**
         * value: "OPENING"
         * @const
         */
        "OPENING": "OPENING",
        /**
         * value: "CLOSING"
         * @const
         */
        "CLOSING": "CLOSING",
        /**
         * value: "AUTOMATIC"
         * @const
         */
        "AUTOMATIC": "AUTOMATIC"    };

}
