/**
 * TD Ameritrade API - OAuth2
 * This is replication of the TD Ameritrade API.
 *
 * OpenAPI spec version: 0.1.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The FutureOptionsQuote model module.
* @module model/FutureOptionsQuote
* @version 0.1.4
*/
export default class FutureOptionsQuote {
    /**
    * Constructs a new <code>FutureOptionsQuote</code>.
    * @alias module:model/FutureOptionsQuote
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>FutureOptionsQuote</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/FutureOptionsQuote} obj Optional instance to populate.
    * @return {module:model/FutureOptionsQuote} The populated <code>FutureOptionsQuote</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FutureOptionsQuote();
                        
            
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('bidPriceInDouble')) {
                obj['bidPriceInDouble'] = ApiClient.convertToType(data['bidPriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('askPriceInDouble')) {
                obj['askPriceInDouble'] = ApiClient.convertToType(data['askPriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('lastPriceInDouble')) {
                obj['lastPriceInDouble'] = ApiClient.convertToType(data['lastPriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('highPriceInDouble')) {
                obj['highPriceInDouble'] = ApiClient.convertToType(data['highPriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('lowPriceInDouble')) {
                obj['lowPriceInDouble'] = ApiClient.convertToType(data['lowPriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('closePriceInDouble')) {
                obj['closePriceInDouble'] = ApiClient.convertToType(data['closePriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('openPriceInDouble')) {
                obj['openPriceInDouble'] = ApiClient.convertToType(data['openPriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('netChangeInDouble')) {
                obj['netChangeInDouble'] = ApiClient.convertToType(data['netChangeInDouble'], 'Number');
            }
            if (data.hasOwnProperty('openInterest')) {
                obj['openInterest'] = ApiClient.convertToType(data['openInterest'], 'Number');
            }
            if (data.hasOwnProperty('exchangeName')) {
                obj['exchangeName'] = ApiClient.convertToType(data['exchangeName'], 'String');
            }
            if (data.hasOwnProperty('securityStatus')) {
                obj['securityStatus'] = ApiClient.convertToType(data['securityStatus'], 'String');
            }
            if (data.hasOwnProperty('volatility')) {
                obj['volatility'] = ApiClient.convertToType(data['volatility'], 'Number');
            }
            if (data.hasOwnProperty('moneyIntrinsicValueInDouble')) {
                obj['moneyIntrinsicValueInDouble'] = ApiClient.convertToType(data['moneyIntrinsicValueInDouble'], 'Number');
            }
            if (data.hasOwnProperty('multiplierInDouble')) {
                obj['multiplierInDouble'] = ApiClient.convertToType(data['multiplierInDouble'], 'Number');
            }
            if (data.hasOwnProperty('digits')) {
                obj['digits'] = ApiClient.convertToType(data['digits'], 'Number');
            }
            if (data.hasOwnProperty('strikePriceInDouble')) {
                obj['strikePriceInDouble'] = ApiClient.convertToType(data['strikePriceInDouble'], 'Number');
            }
            if (data.hasOwnProperty('contractType')) {
                obj['contractType'] = ApiClient.convertToType(data['contractType'], 'String');
            }
            if (data.hasOwnProperty('underlying')) {
                obj['underlying'] = ApiClient.convertToType(data['underlying'], 'String');
            }
            if (data.hasOwnProperty('timeValueInDouble')) {
                obj['timeValueInDouble'] = ApiClient.convertToType(data['timeValueInDouble'], 'Number');
            }
            if (data.hasOwnProperty('deltaInDouble')) {
                obj['deltaInDouble'] = ApiClient.convertToType(data['deltaInDouble'], 'Number');
            }
            if (data.hasOwnProperty('gammaInDouble')) {
                obj['gammaInDouble'] = ApiClient.convertToType(data['gammaInDouble'], 'Number');
            }
            if (data.hasOwnProperty('thetaInDouble')) {
                obj['thetaInDouble'] = ApiClient.convertToType(data['thetaInDouble'], 'Number');
            }
            if (data.hasOwnProperty('vegaInDouble')) {
                obj['vegaInDouble'] = ApiClient.convertToType(data['vegaInDouble'], 'Number');
            }
            if (data.hasOwnProperty('rhoInDouble')) {
                obj['rhoInDouble'] = ApiClient.convertToType(data['rhoInDouble'], 'Number');
            }
            if (data.hasOwnProperty('mark')) {
                obj['mark'] = ApiClient.convertToType(data['mark'], 'Number');
            }
            if (data.hasOwnProperty('tick')) {
                obj['tick'] = ApiClient.convertToType(data['tick'], 'Number');
            }
            if (data.hasOwnProperty('tickAmount')) {
                obj['tickAmount'] = ApiClient.convertToType(data['tickAmount'], 'Number');
            }
            if (data.hasOwnProperty('futureIsTradable')) {
                obj['futureIsTradable'] = ApiClient.convertToType(data['futureIsTradable'], 'Boolean');
            }
            if (data.hasOwnProperty('futureTradingHours')) {
                obj['futureTradingHours'] = ApiClient.convertToType(data['futureTradingHours'], 'String');
            }
            if (data.hasOwnProperty('futurePercentChange')) {
                obj['futurePercentChange'] = ApiClient.convertToType(data['futurePercentChange'], 'Number');
            }
            if (data.hasOwnProperty('futureIsActive')) {
                obj['futureIsActive'] = ApiClient.convertToType(data['futureIsActive'], 'Boolean');
            }
            if (data.hasOwnProperty('futureExpirationDate')) {
                obj['futureExpirationDate'] = ApiClient.convertToType(data['futureExpirationDate'], 'Number');
            }
            if (data.hasOwnProperty('expirationType')) {
                obj['expirationType'] = ApiClient.convertToType(data['expirationType'], 'String');
            }
            if (data.hasOwnProperty('exerciseType')) {
                obj['exerciseType'] = ApiClient.convertToType(data['exerciseType'], 'String');
            }
            if (data.hasOwnProperty('inTheMoney')) {
                obj['inTheMoney'] = ApiClient.convertToType(data['inTheMoney'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * @member {String} symbol
    */
    'symbol' = undefined;
    /**
    * @member {Number} bidPriceInDouble
    */
    'bidPriceInDouble' = undefined;
    /**
    * @member {Number} askPriceInDouble
    */
    'askPriceInDouble' = undefined;
    /**
    * @member {Number} lastPriceInDouble
    */
    'lastPriceInDouble' = undefined;
    /**
    * @member {Number} highPriceInDouble
    */
    'highPriceInDouble' = undefined;
    /**
    * @member {Number} lowPriceInDouble
    */
    'lowPriceInDouble' = undefined;
    /**
    * @member {Number} closePriceInDouble
    */
    'closePriceInDouble' = undefined;
    /**
    * @member {String} description
    */
    'description' = undefined;
    /**
    * @member {Number} openPriceInDouble
    */
    'openPriceInDouble' = undefined;
    /**
    * @member {Number} netChangeInDouble
    */
    'netChangeInDouble' = undefined;
    /**
    * @member {Number} openInterest
    */
    'openInterest' = undefined;
    /**
    * @member {String} exchangeName
    */
    'exchangeName' = undefined;
    /**
    * @member {String} securityStatus
    */
    'securityStatus' = undefined;
    /**
    * @member {Number} volatility
    */
    'volatility' = undefined;
    /**
    * @member {Number} moneyIntrinsicValueInDouble
    */
    'moneyIntrinsicValueInDouble' = undefined;
    /**
    * @member {Number} multiplierInDouble
    */
    'multiplierInDouble' = undefined;
    /**
    * @member {Number} digits
    */
    'digits' = undefined;
    /**
    * @member {Number} strikePriceInDouble
    */
    'strikePriceInDouble' = undefined;
    /**
    * @member {String} contractType
    */
    'contractType' = undefined;
    /**
    * @member {String} underlying
    */
    'underlying' = undefined;
    /**
    * @member {Number} timeValueInDouble
    */
    'timeValueInDouble' = undefined;
    /**
    * @member {Number} deltaInDouble
    */
    'deltaInDouble' = undefined;
    /**
    * @member {Number} gammaInDouble
    */
    'gammaInDouble' = undefined;
    /**
    * @member {Number} thetaInDouble
    */
    'thetaInDouble' = undefined;
    /**
    * @member {Number} vegaInDouble
    */
    'vegaInDouble' = undefined;
    /**
    * @member {Number} rhoInDouble
    */
    'rhoInDouble' = undefined;
    /**
    * @member {Number} mark
    */
    'mark' = undefined;
    /**
    * @member {Number} tick
    */
    'tick' = undefined;
    /**
    * @member {Number} tickAmount
    */
    'tickAmount' = undefined;
    /**
    * @member {Boolean} futureIsTradable
    */
    'futureIsTradable' = undefined;
    /**
    * @member {String} futureTradingHours
    */
    'futureTradingHours' = undefined;
    /**
    * @member {Number} futurePercentChange
    */
    'futurePercentChange' = undefined;
    /**
    * @member {Boolean} futureIsActive
    */
    'futureIsActive' = undefined;
    /**
    * @member {Number} futureExpirationDate
    */
    'futureExpirationDate' = undefined;
    /**
    * @member {String} expirationType
    */
    'expirationType' = undefined;
    /**
    * @member {String} exerciseType
    */
    'exerciseType' = undefined;
    /**
    * @member {Boolean} inTheMoney
    */
    'inTheMoney' = undefined;




}
